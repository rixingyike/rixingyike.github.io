import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.25d5caa7.js";const d=JSON.parse('{"title":"ChatGPT 发布对插件的支持","description":"","frontmatter":{"title":"ChatGPT 发布对插件的支持","date":"2023-03-24T11:37:40.000Z"},"headers":[],"relativePath":"posts/2023/04.md","filePath":"posts/2023/04.md"}'),l={name:"posts/2023/04.md"},o=p(`<h1 id="chatgpt-发布对插件的支持-告诉-chatgpt-你可以提供什么在线服务-由它作为-前端-向用户提供" tabindex="-1">ChatGPT 发布对插件的支持，告诉 ChatGPT 你可以提供什么在线服务，由它作为“前端”向用户提供 <a class="header-anchor" href="#chatgpt-发布对插件的支持-告诉-chatgpt-你可以提供什么在线服务-由它作为-前端-向用户提供" aria-label="Permalink to &quot;ChatGPT 发布对插件的支持，告诉 ChatGPT 你可以提供什么在线服务，由它作为“前端”向用户提供&quot;">​</a></h1><p>目录</p><nav class="table-of-contents"><ul><li><a href="#插件可以干什么事">插件可以干什么事？</a></li><li><a href="#什么是-api">什么是 API？</a></li><li><a href="#如何申请">如何申请？</a></li><li><a href="#如何开发chatgpt-plugins-插件">如何开发ChatGPT Plugins(插件)？</a><ul><li><a href="#第-1-步">第 1 步</a></li><li><a href="#第-2-步">第 2 步</a></li><li><a href="#第-3-步">第 3 步</a></li></ul></li><li><a href="#什么是-openai-规范">什么是 OpenAI 规范？</a></li><li><a href="#如何由-openai-规范文件生成代码">如何由 OpenAI 规范文件生成代码？</a><ul><li><a href="#第-1-步-安装工具">第 1 步，安装工具</a></li><li><a href="#第-2-步-由规范生成代码">第 2 步，由规范生成代码</a></li></ul></li><li><a href="#小结">小结</a></li></ul></nav><p>2023 年北京时间 3 月 24 凌晨，OpneAI 在推特上官宣：</p><p><img src="https://cdn.jsdelivr.net/gh/rixingyike/images@master/2023/202303241145523.png" alt="image-20230324114533386"></p><p>指向的链接是：<a href="https://openai.com/blog/chatgpt-plugins" target="_blank" rel="noreferrer">https://openai.com/blog/chatgpt-plugins</a></p><p>你可以立即申请加入等待列表：<a href="https://openai.com/waitlist/plugins" target="_blank" rel="noreferrer">https://openai.com/waitlist/plugins</a></p><p>或阅读开发插件的文档：<a href="https://platform.openai.com/docs/plugins/introduction" target="_blank" rel="noreferrer">https://platform.openai.com/docs/plugins/introduction</a></p><h2 id="插件可以干什么事" tabindex="-1">插件可以干什么事？ <a class="header-anchor" href="#插件可以干什么事" aria-label="Permalink to &quot;插件可以干什么事？&quot;">​</a></h2><ul><li>检索实时信息，例如体育比分、股票价格、最新消息等；</li><li>检索知识库信息，例如公司文档、个人笔记等；</li><li>代表用户执行操作，例如预订航班、订购食物等。</li></ul><p>总而言之，可以充许你通过 ChatGPT 向你的同事或用户提供你能提供的在线服务。</p><p>举个例子：</p><p>如果用户在线问 ChatGPT：我应该在巴黎的哪里住几晚？</p><p>ChatGPT 模型可以选择调用酒店“预订插件 API”，接收 API 响应，并将 API 返回的数据组合起来，基于其自然语言处理能力，向用户返回人类友好的答案。</p><p>这里提到了 API，那么什么是 API？</p><h2 id="什么是-api" tabindex="-1">什么是 API？ <a class="header-anchor" href="#什么是-api" aria-label="Permalink to &quot;什么是 API？&quot;">​</a></h2><p>API 代表应用程序编程接口，它是一组用于构建和集成应用程序软件的定义和协议。</p><p>你可以把 API 理解为餐馆的服务员，举个例子，假如我们去一家饭馆，桌面上摆着一份菜单，后厨能提供菜单上的菜式。服务员是我们与后厨沟通的桥梁，你告诉服务员你选的菜，然后他再将菜带回到你的餐桌上。在这接口调用中，相当于服务员带着你的 request 去告诉 system，然后将 response 带回给你。</p><p>至此，全世界都可以开放自己系统的 API，然后提供给 ChatGPT 调用，而 ChatGPT 作为“前端”，向用户提供在线服务。</p><p>插件的宣布，宣告着智能革命的开始，从此 ChatGPT 可以访问在线服务和知识内容了。以各大平台仅存的优势就真的只剩下数据了。</p><h2 id="如何申请" tabindex="-1">如何申请？ <a class="header-anchor" href="#如何申请" aria-label="Permalink to &quot;如何申请？&quot;">​</a></h2><p>你可以在这里申请加入等待列表：<a href="https://openai.com/waitlist/plugins" target="_blank" rel="noreferrer">https://openai.com/waitlist/plugins</a></p><h2 id="如何开发chatgpt-plugins-插件" tabindex="-1">如何开发ChatGPT Plugins(插件)？ <a class="header-anchor" href="#如何开发chatgpt-plugins-插件" aria-label="Permalink to &quot;如何开发ChatGPT Plugins(插件)？&quot;">​</a></h2><p>创建 ChatGPT 插件需要三个步骤：</p><ul><li>构建 API 代码，这是插件服务的核心；</li><li>接口文档化，遵照 OpenAPI 规范，以 yaml 或 JSON 格式描述 API，告诉 ChatGPT 你的接口如何调用；</li><li>创建一个 JSON 清单文件，该文件将定义插件的相关元数据，位于/.well-known/ai-plugin.json，它有指定的结构及字段名称，告诉 ChatGPT 你的插件是干什么用的。</li></ul><p>具体步骤，以官方<strong>构建一个简单的待办事项列表插件</strong>为例说明一下：</p><h3 id="第-1-步" tabindex="-1">第 1 步 <a class="header-anchor" href="#第-1-步" aria-label="Permalink to &quot;第 1 步&quot;">​</a></h3><p>首先，使用以下字段定义一个 manifest.json 文件：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;schema_version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;v1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;name_for_human&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;TODO Plugin (no auth)&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;name_for_model&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;todo&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;description_for_human&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;description_for_model&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;auth&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;api&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;openapi&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;PLUGIN_HOSTNAME/openapi.yaml&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;is_user_authenticated&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;logo_url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;PLUGIN_HOSTNAME/logo.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;contact_email&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dummy@email.com&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;legal_info_url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;http://www.example.com/legal&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;schema_version&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;v1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;name_for_human&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;TODO Plugin (no auth)&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;name_for_model&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;todo&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;description_for_human&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;description_for_model&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;auth&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;api&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;openapi&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;PLUGIN_HOSTNAME/openapi.yaml&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;is_user_authenticated&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;logo_url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;PLUGIN_HOSTNAME/logo.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;contact_email&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dummy@email.com&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;legal_info_url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;http://www.example.com/legal&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>该文件将在/.well-known/ai-plugin.json 这个位置提供。</p><h3 id="第-2-步" tabindex="-1">第 2 步 <a class="header-anchor" href="#第-2-步" aria-label="Permalink to &quot;第 2 步&quot;">​</a></h3><p>接下来，我们可以定义几个简单的 Python 接口，为特定用户提供创建、删除和获取 todo 列表项的功能。</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> quart</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> quart_cors</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> quart </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> request</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> quart_cors.cors(quart.Quart(</span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;">), </span><span style="color:#FFAB70;">allow_origin</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_todo</span><span style="color:#E1E4E8;">(username):</span></span>
<span class="line"><span style="color:#E1E4E8;">    request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> quart.request.get_json(</span><span style="color:#FFAB70;">force</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> username </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">[username] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">[username].append(request[</span><span style="color:#9ECBFF;">&quot;todo&quot;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> quart.Response(</span><span style="color:#FFAB70;">response</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;OK&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">status</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_todos</span><span style="color:#E1E4E8;">(username):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> quart.Response(</span><span style="color:#FFAB70;">response</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">json.dumps(</span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">.get(username, [])), </span><span style="color:#FFAB70;">status</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.delete</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delete_todo</span><span style="color:#E1E4E8;">(username):</span></span>
<span class="line"><span style="color:#E1E4E8;">    request </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> quart.request.get_json(</span><span style="color:#FFAB70;">force</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    todo_idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request[</span><span style="color:#9ECBFF;">&quot;todo_idx&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># fail silently, it&#39;s a simple plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> todo_idx </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">[username]):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">_TODOS</span><span style="color:#E1E4E8;">[username].pop(todo_idx)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> quart.Response(</span><span style="color:#FFAB70;">response</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;OK&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">status</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/logo.png&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">plugin_logo</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    filename </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;logo.png&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> quart.send_file(filename, </span><span style="color:#FFAB70;">mimetype</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;image/png&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/.well-known/ai-plugin.json&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">plugin_manifest</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request.headers[</span><span style="color:#9ECBFF;">&#39;Host&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;manifest.json&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">        text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.read()</span></span>
<span class="line"><span style="color:#E1E4E8;">        text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> text.replace(</span><span style="color:#9ECBFF;">&quot;PLUGIN_HOSTNAME&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;https://</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">host</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> quart.Response(text, </span><span style="color:#FFAB70;">mimetype</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;text/json&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/openapi.yaml&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">openapi_spec</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request.headers[</span><span style="color:#9ECBFF;">&#39;Host&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;openapi.yaml&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> f:</span></span>
<span class="line"><span style="color:#E1E4E8;">        text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> f.read()</span></span>
<span class="line"><span style="color:#E1E4E8;">        text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> text.replace(</span><span style="color:#9ECBFF;">&quot;PLUGIN_HOSTNAME&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;https://</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">host</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> quart.Response(text, </span><span style="color:#FFAB70;">mimetype</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;text/yaml&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    app.run(</span><span style="color:#FFAB70;">debug</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">host</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">port</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">5002</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    main()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> quart</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> quart_cors</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> quart </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> request</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> quart_cors.cors(quart.Quart(</span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;">), </span><span style="color:#E36209;">allow_origin</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_todo</span><span style="color:#24292E;">(username):</span></span>
<span class="line"><span style="color:#24292E;">    request </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> quart.request.get_json(</span><span style="color:#E36209;">force</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> username </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">[username] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">[username].append(request[</span><span style="color:#032F62;">&quot;todo&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> quart.Response(</span><span style="color:#E36209;">response</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;OK&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">status</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_todos</span><span style="color:#24292E;">(username):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> quart.Response(</span><span style="color:#E36209;">response</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">json.dumps(</span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">.get(username, [])), </span><span style="color:#E36209;">status</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.delete</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/todos/&lt;string:username&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delete_todo</span><span style="color:#24292E;">(username):</span></span>
<span class="line"><span style="color:#24292E;">    request </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> quart.request.get_json(</span><span style="color:#E36209;">force</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    todo_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request[</span><span style="color:#032F62;">&quot;todo_idx&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># fail silently, it&#39;s a simple plugin</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> todo_idx </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">[username]):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">_TODOS</span><span style="color:#24292E;">[username].pop(todo_idx)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> quart.Response(</span><span style="color:#E36209;">response</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;OK&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">status</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/logo.png&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plugin_logo</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    filename </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;logo.png&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> quart.send_file(filename, </span><span style="color:#E36209;">mimetype</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;image/png&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/.well-known/ai-plugin.json&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plugin_manifest</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request.headers[</span><span style="color:#032F62;">&#39;Host&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;manifest.json&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">        text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.read()</span></span>
<span class="line"><span style="color:#24292E;">        text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> text.replace(</span><span style="color:#032F62;">&quot;PLUGIN_HOSTNAME&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;https://</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">host</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> quart.Response(text, </span><span style="color:#E36209;">mimetype</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;text/json&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/openapi.yaml&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">openapi_spec</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request.headers[</span><span style="color:#032F62;">&#39;Host&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;openapi.yaml&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> f:</span></span>
<span class="line"><span style="color:#24292E;">        text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f.read()</span></span>
<span class="line"><span style="color:#24292E;">        text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> text.replace(</span><span style="color:#032F62;">&quot;PLUGIN_HOSTNAME&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;https://</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">host</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> quart.Response(text, </span><span style="color:#E36209;">mimetype</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;text/yaml&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    app.run(</span><span style="color:#E36209;">debug</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">host</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;0.0.0.0&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">port</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5002</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    main()</span></span></code></pre></div><p>这是一个在内存中实现简单的增删改查功能的 Py 示例。它同时做为 Web Server 程序还提供了 ChatGPT 需要的 ai-plugin.json 和 openapi.yaml。</p><h3 id="第-3-步" tabindex="-1">第 3 步 <a class="header-anchor" href="#第-3-步" aria-label="Permalink to &quot;第 3 步&quot;">​</a></h3><p>最后，我们需要设置和定义 OpenAPI 规范，以匹配本地或远程服务器上定义的接口。您不需要通过规范公开 API 的全部功能，而是可以选择性地让 ChatGPT 只访问某些功能。</p><p>有不少工具可以自动将服务器定义代码转换为 OpenAPI 规范，因此您不需要手动执行此操作。对于上面的 Python 代码，它的 OpenAPI 规范说明看起来像这样：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">openapi</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3.0.1</span></span>
<span class="line"><span style="color:#85E89D;">info</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TODO Plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">A plugin that allows the user to create and manage a TODO list using ChatGPT. If you do not know the user&#39;s username, ask them first before making queries to the plugin. Otherwise, use the username &quot;global&quot;.</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;v1&#39;</span></span>
<span class="line"><span style="color:#85E89D;">servers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">PLUGIN_HOSTNAME</span></span>
<span class="line"><span style="color:#85E89D;">paths</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">/todos/{username}</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">get</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">operationId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">getTodos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Get the list of todos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">parameters</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">in</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">path</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">username</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The name of the user.</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">responses</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OK</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">content</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">application/json</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#85E89D;">$ref</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#/components/schemas/getTodosResponse&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">post</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">operationId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">addTodo</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Add a todo to the list</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">parameters</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">in</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">path</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">username</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The name of the user.</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requestBody</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">content</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">application/json</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">$ref</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#/components/schemas/addTodoRequest&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">responses</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OK</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">delete</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">operationId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">deleteTodo</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Delete a todo from the list</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">parameters</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">in</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">path</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">username</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The name of the user.</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requestBody</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">content</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">application/json</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">schema</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">$ref</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;#/components/schemas/deleteTodoRequest&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">responses</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OK</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">components</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">schemas</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">getTodosResponse</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">object</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">todos</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">array</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">items</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The list of todos.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">addTodoRequest</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">object</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">todo</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">todo</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The todo to add to the list.</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">deleteTodoRequest</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">object</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">todo_idx</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">properties</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">todo_idx</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">integer</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">The index of the todo to delete.</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">required</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">openapi</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3.0.1</span></span>
<span class="line"><span style="color:#22863A;">info</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">title</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TODO Plugin</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">A plugin that allows the user to create and manage a TODO list using ChatGPT. If you do not know the user&#39;s username, ask them first before making queries to the plugin. Otherwise, use the username &quot;global&quot;.</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;v1&#39;</span></span>
<span class="line"><span style="color:#22863A;">servers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">PLUGIN_HOSTNAME</span></span>
<span class="line"><span style="color:#22863A;">paths</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">/todos/{username}</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">get</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">operationId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">getTodos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">summary</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Get the list of todos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">parameters</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">in</span><span style="color:#24292E;">: </span><span style="color:#032F62;">path</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">username</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">string</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The name of the user.</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">responses</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OK</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">content</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">application/json</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#22863A;">$ref</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;#/components/schemas/getTodosResponse&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">post</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">operationId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">addTodo</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">summary</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Add a todo to the list</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">parameters</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">in</span><span style="color:#24292E;">: </span><span style="color:#032F62;">path</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">username</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">string</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The name of the user.</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requestBody</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">content</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">application/json</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">$ref</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;#/components/schemas/addTodoRequest&#39;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">responses</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OK</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">delete</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">operationId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">deleteTodo</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">summary</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Delete a todo from the list</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">parameters</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">in</span><span style="color:#24292E;">: </span><span style="color:#032F62;">path</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">username</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">string</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The name of the user.</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requestBody</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">content</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">application/json</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">schema</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">$ref</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;#/components/schemas/deleteTodoRequest&#39;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">responses</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OK</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">components</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">schemas</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">getTodosResponse</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">object</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">properties</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">todos</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">array</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">items</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">string</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The list of todos.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">addTodoRequest</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">object</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">required</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">todo</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">properties</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">todo</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">string</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The todo to add to the list.</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">deleteTodoRequest</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">object</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">required</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">todo_idx</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">properties</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">todo_idx</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">integer</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">The index of the todo to delete.</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">required</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>这是 openapi.yaml 文件的内容，它将告诉 ChatGPT，如何调用接口。</p><p>这里提代了 OpenAI 规范，可能有读者不了解，那么什么是 OpenAI 规范？</p><h2 id="什么是-openai-规范" tabindex="-1">什么是 OpenAI 规范？ <a class="header-anchor" href="#什么是-openai-规范" aria-label="Permalink to &quot;什么是 OpenAI 规范？&quot;">​</a></h2><p>OpenAPI 规范（OAS），是定义一个标准的、与具体编程语言无关的 RESTful API 的规范。</p><p>OpenAPI 规范使得人类和计算机都能在“不接触任何程序源代码和文档、不监控网络通信”的情况下理解一个在线服务的作用。</p><p><strong>遵循该规范的好处是什么？</strong></p><p>如果您遵循 OpenAPI 规范来定义您的 API，那么您就可以用文档生成工具来展示您的 API，用代码生成工具来自动生成其它编程语言的服务器端和客户端代码，用自动测试工具进行测试等等。</p><p>简而言之，通过该规范，我们即可以由接口程序代码生成规范，也可以由规范生成其它后端语言实现的接口程序代码。</p><p>这里有一个份关于 OpenAI 规范的中文文档，可以考虑：<a href="https://openapi.apifox.cn/" target="_blank" rel="noreferrer">https://openapi.apifox.cn/</a></p><h2 id="如何由-openai-规范文件生成代码" tabindex="-1">如何由 OpenAI 规范文件生成代码？ <a class="header-anchor" href="#如何由-openai-规范文件生成代码" aria-label="Permalink to &quot;如何由 OpenAI 规范文件生成代码？&quot;">​</a></h2><p>可以使用 openapi-generator-cli。</p><p>它的工具仓库地址是：<a href="https://github.com/openapitools/openapi-generator-cli" target="_blank" rel="noreferrer">https://github.com/openapitools/openapi-generator-cli</a></p><h3 id="第-1-步-安装工具" tabindex="-1">第 1 步，安装工具 <a class="header-anchor" href="#第-1-步-安装工具" aria-label="Permalink to &quot;第 1 步，安装工具&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">npm install @openapitools/openapi-generator-cli -g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">npm install @openapitools/openapi-generator-cli -g</span></span></code></pre></div><h3 id="第-2-步-由规范生成代码" tabindex="-1">第 2 步，由规范生成代码 <a class="header-anchor" href="#第-2-步-由规范生成代码" aria-label="Permalink to &quot;第 2 步，由规范生成代码&quot;">​</a></h3><p>下面是一个使用 OpenAPI Generator 生成 Python 服务端代码的示例。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ openapi-generator generate -i /path/to/openapi.yaml -g python-flask -o /output/directory</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ openapi-generator generate -i /path/to/openapi.yaml -g python-flask -o /output/directory</span></span></code></pre></div><p>其中，/path/to/openapi.yaml 是 OpenAPI 规范文件的路径，-g 指定使用的生成器（这里是 python-flask），-o 指定输出目录。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>1946年电子计算机被发明出来的时候，当时没有多少人意识到它将发挥多大作用，我们现在知道的信息革命其实是我们后来总结的。今天开始的智能革命，其实具有同样的特征，如果说ChatGPT的发布还不能让你感到震撼的话，那么今天它发布的ChatGPT Plugins，应该能够引起你足够的重视了。一个联网的智能机器人，无穷的数据+无穷的算力，谁也不知道将产生怎样的结果。<strong>智能革命</strong>已经到来，AI或许不会取代的人，但会使用AI的人，一定会把不会使用AI的人取代。</p><p>你对ChatGPT了解多少，开始试用了吗？如果你是一名程序员，开始研究它的API文档了吗？</p><p>新人从0到1编程自学经典<a href="https://item.jd.com/10070363837259.html" target="_blank" rel="noreferrer">《微信小游戏开发》</a>全套书籍已经在京东、当当上架，需要签名版及1v1辅导的读者请与作者联系。作者博客：<a href="https://yishulun.com/" target="_blank" rel="noreferrer">艺述论</a>。</p>`,60),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{d as __pageData,h as default};
