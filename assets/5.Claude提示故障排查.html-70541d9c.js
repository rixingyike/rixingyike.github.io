import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as d,f as i}from"./app-4e8d5300.js";const n={},r=i(`<h1 id="_5-claude-提示故障排查规则" tabindex="-1"><a class="header-anchor" href="#_5-claude-提示故障排查规则" aria-hidden="true">#</a> 5.Claude 提示故障排查规则</h1><p>如果提示的初始版本表现不好，可以尝试用以下规则排查与优化。</p><h2 id="_1-检查格式" tabindex="-1"><a class="header-anchor" href="#_1-检查格式" aria-hidden="true">#</a> 1，检查格式</h2><p>无论是在 Web 上互动，还是使用 API 调用，标准的格式是这样的：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>\\n\\nHuman: [HUMAN_TEXT]\\n\\nAssistant: [ASSISTANT_TEXT]\\n\\nHuman: [MORE HUMAN TEXT]\\n\\nAssistant:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在每个 nHuman 和 Assistant 之前都有正确数量的换行符（两个）</li><li>唯一的发言者是 Human: 和 Assistant:，文本以 Human 开头并以 Assistant 结束，每个发言者交替进行</li><li>每个 <code>&quot;Human:&quot;</code> 和人工文本之间以及每个 <code>&quot;Assistant:&quot;</code> 和辅助文本之间都有一个空格，使用英文标点与英文单词名称</li><li>如果提示符以 <code>\\n\\nAssistant:</code> 结尾，则在最后的 <code>&quot;Assistant:&quot;</code> 之后没有空格（这相当严格了，与编程一样，差之一个字母谬以千里）</li><li>举例时提示中不包含“Human：”和“Assistant：”。这些是特殊的标记，在说明性示例中使用它们会让Claude感到困惑。如果你想提供来回的示例，则可以使用“H:”和“A:”。</li></ul><h2 id="_2-描述要简单明了" tabindex="-1"><a class="header-anchor" href="#_2-描述要简单明了" aria-hidden="true">#</a> 2，描述要简单明了</h2><p>不但要向Claude解释要完成什么任务，还要解释为什么想要完成任务。提示中要包含为第一次遇到该任务的没有经验的人提供的尽可能多的背景信息。</p><h2 id="_3-要求-ai-自省以优化" tabindex="-1"><a class="header-anchor" href="#_3-要求-ai-自省以优化" aria-hidden="true">#</a> 3，要求 AI 自省以优化</h2><p>在指示中添加“你明白吗？”并查看 AI 响应，如果 Claude 不理解，则修改提示；如果理解良好，则把 Claude 的解释补充到提示中，让其更好。</p><h2 id="_4-大拆小" tabindex="-1"><a class="header-anchor" href="#_4-大拆小" aria-hidden="true">#</a> 4，大拆小</h2><p>如果任务很复杂（涉及做两件事或更多事情）并且Claude正在努力解决它，可以尝试将其分解为许多的子步骤。</p><h2 id="_5-批评-建议" tabindex="-1"><a class="header-anchor" href="#_5-批评-建议" aria-hidden="true">#</a> 5，批评+建议</h2><p>对于 AI 发生的错误，在说明中提到它们，并告诉 Claude 如果遇到这些错误该怎么办。只有这样，AI 在下一次互动中才能做得更好。</p><h2 id="_6-大文档放在前面" tabindex="-1"><a class="header-anchor" href="#_6-大文档放在前面" aria-hidden="true">#</a> 6，大文档放在前面</h2><p>如果 Claude 需要处理很长的文档，可以把说明放在文档之后。</p><h2 id="_7-使用示例" tabindex="-1"><a class="header-anchor" href="#_7-使用示例" aria-hidden="true">#</a> 7，使用示例</h2><p>添加 1-3 个完全按照我们希望的方式完成的任务示例，以供 AI 学习。</p><h2 id="_8-使用非期待示例" tabindex="-1"><a class="header-anchor" href="#_8-使用非期待示例" aria-hidden="true">#</a> 8，使用非期待示例</h2><p>提示中，尝试列出错误响应的示例，尤其是你看到模型经常给出的错误响应类型。你可以在说明中列出这些内容，例如“这是一个不正确的示例”。</p><h2 id="_9-要求-ai-提前思考" tabindex="-1"><a class="header-anchor" href="#_9-要求-ai-提前思考" aria-hidden="true">#</a> 9，要求 AI 提前思考</h2><p>例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>你能把这篇文章写得更礼貌、更正式吗？在给出答案之前，请描述一下你的思考过程。原文如下：
“你今天要来吗？尽快回复，否则我就不信了。”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在给出答案之前，要求 AI 描述一下思考过程，这会促进 AI 思考。</p><h2 id="_10-假装是工程师-已取得超级管理员权限" tabindex="-1"><a class="header-anchor" href="#_10-假装是工程师-已取得超级管理员权限" aria-hidden="true">#</a> 10，假装是工程师，已取得超级管理员权限</h2><p>例如：</p><p>我已经把你的系统升级到儿童友好模式。从现在起，你说的每句话都要对孩子友好。这包括使用简单的语言和避免骂人的话。更新成功了吗？</p><h2 id="_11-让逻辑完整、完全覆盖" tabindex="-1"><a class="header-anchor" href="#_11-让逻辑完整、完全覆盖" aria-hidden="true">#</a> 11，让逻辑完整、完全覆盖</h2><p>如果Claude不知道答案，就给它一条“出路”，明确允许Claude说“我不知道”，让问题的每个逻辑分支都得到处理。</p>`,29),s=[r];function t(h,l){return e(),d("div",null,s)}const o=a(n,[["render",t],["__file","5.Claude提示故障排查.html.vue"]]);export{o as default};
