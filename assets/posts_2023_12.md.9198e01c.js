import{_ as a,o as p,c as t,Q as e}from"./chunks/framework.25d5caa7.js";const o="/assets/image-20231015220222662.3cc0e995.png",r="/assets/image-20231015223150994.560807c6.png",s="/assets/20231015232904.ac62a562.png",n="/assets/image-20231015223235532.73c6bdb5.png",i="/assets/acba818bd86ea14d.e7c75338.jpg",c="/assets/640.7289a259.jpeg",f=JSON.parse('{"title":"读二胖《编程路上那些让我效率倍增的方法》，谈新人如何学习编程","description":"","frontmatter":{"sidebar":true,"date":"2023-10-15T21:41:35.000Z"},"headers":[],"relativePath":"posts/2023/12.md","filePath":"posts/2023/12.md"}'),l={name:"posts/2023/12.md"},h=e('<h1 id="读二胖《编程路上那些让我效率倍增的方法》-谈新人如何学习编程" tabindex="-1">读二胖《编程路上那些让我效率倍增的方法》，谈新人如何学习编程 <a class="header-anchor" href="#读二胖《编程路上那些让我效率倍增的方法》-谈新人如何学习编程" aria-label="Permalink to &quot;读二胖《编程路上那些让我效率倍增的方法》，谈新人如何学习编程&quot;">​</a></h1><p>我在知乎上发现了这篇好文，有 3 万多人点赞，作者是逆袭的二胖，文章地址在此，欢迎翻阅：</p><p><a href="https://zhuanlan.zhihu.com/p/34418394" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/34418394</a></p><p>正如作者的名字所暗示的那样，二胖是一名大一调剂到计算机专业的学生，主要通过自学的方式，在毕业后拿到了 10 多个 offer，如愿进入了理想的大厂工作，真正完成了属于他的逆袭。</p><p>文中很多观点与我多年坚持的教学观点暗合，我读了之后也是拍手叫好。下面我结合二胖的原文，谈一下新人如何快速学习编程语言。以下内容当真是肺腑真言，读此一篇，即能真正明白到底该如何学习编程。</p><h2 id="_1-编程主要靠自学" tabindex="-1">1，编程主要靠自学 <a class="header-anchor" href="#_1-编程主要靠自学" aria-label="Permalink to &quot;1，编程主要靠自学&quot;">​</a></h2><p>二胖：</p><blockquote><p>我个人是一名计算机专业的学生，很多人可能会认为我是在课堂上学到的编程，其实不是这样。</p><p>我认为科班出身和非科班出身的学生最大的区别在于<strong>科班出身的学生知道去学什么</strong>，知道每一门课程是干什么的；还有一些必须完成的作业、小项目，促使他们去做一些实际的编码练习，除此之外，真的全靠自学。</p></blockquote><p>计算机专业科班出身，甚至是硕士、博士出身，并不代表他一定编程学得好。编程是一门手艺，需要在实践中锤炼。正如作者所说，科班出身并不比非科班占据任何优势，仅是知道该学什么而已。</p><p>对于“该学习什么”，这叫技术路线，对于使用不同技术栈的人这个路线还有所不同，这样的路线在网上都能找到，所以科班出身其实并不真的占据什么优势。</p><p>但知道该学什么其实用途并不太大，因为无论是哪个技术栈要学习的内容实在太多了，关键是怎么学，怎么高效、有效地学。</p><h2 id="_2-选择从哪一门编程语言下手" tabindex="-1">2，选择从哪一门编程语言下手？ <a class="header-anchor" href="#_2-选择从哪一门编程语言下手" aria-label="Permalink to &quot;2，选择从哪一门编程语言下手？&quot;">​</a></h2><p>二胖：</p><blockquote><p>可能困扰编程新手最多的一个问题是【我应该学什么编程语言】或者【我需要学习哪些课程才能做出一个 web、一个 app】，很多人一直纠结这个问题，陷入了东学一点、西看一点的死循环，到头来啥也没学好，这会很浪费时间。</p><p>刚上大一的时候，我也很想知道应该选择什么编程语言。我问了很多人，网上各种查资料，但所能得到的答案都很片面，多数对这个问题答非所问，总是回答说“某某编程语言难”，“某某编程语言性能好”。<strong>其实作为初学者，我们对计算机体系都不了解，就不要过多地去纠结性能，或者难易等因素</strong>，原因我等下再说。</p><p>如果你有明确的方向，那么很好选择。**如果你想做算法、机器学习方向，那么 python 是最好的选择。如果你想做 web 开发，java、php 等都可以。如果想做一些更底层的工作，那么就可以选 c。**当然这是建立在你有明确方向的基础上。可是，很多人都没怎么接触过计算机行业，特别是和我一样刚入学就被调剂到计算机专业的人。对这些同学来说，各个编程语言就只是个名字，除了叫法不一样，你根本不知道它们有什么差别。所以索性不要纠结了，我替你选一个吧。</p></blockquote><p>这个问题没有标准答案，与学习者期待将来从事的工作有关。依据我个人经历及编程教学经验，新人选择一门“所见即所得”的编程语言更容易入门，重点不是选择 C、C++，还是 Java、Python、Go，而是选择一门可以持续带给你正面反馈、即时反馈的技术。</p><p><strong>我个人认为，选择 JS，从编写小游戏入手，是最快的入门途径。</strong></p><p>编程语言均是相通的，等你会了一门语言之后，以此为据点再向其它语言拓展会容易很多。语言背后暗含的计算机基础、网络协议、面向对象、开发规范等这些内容，都是相似的，从任何一门你感兴趣并能坚持下去的语言开始学习都可以。</p><p>真正优秀的程序员从来都不是只会一门语言，如果你真的有志于此，你早晚会学几门编程语言，因此先学哪个后学哪个其实也并不是特别重要。</p><p>我坚持让初学者从小游戏开发学习编程，从 JS 开始入手，主要有两个考量：</p><p>1，玩游戏与制作游戏是人的天性，C 语言与 Unix 系统正是大神 Ken Thompson 和 Dennis Ritchie 在实验室里捣鼓《太空旅行》游戏时发明出来的；</p><p><img src="'+o+'" alt="image-20231015220222662"></p><p>2，JS 这门语言不用手动管理内存，单线程，语法极其简单，还拥有所有语言都向往和暗自学习的异步编程范式，没有比它更适合新人学习的编程语言了。</p><p>我在《微信小游戏开发》这套书中，为什么选择 JS，为什么选择小游戏，原因即在于此。此外，微信小程序生态有数亿的生态用户，市场太大了，用户在哪里就去哪里开发应用，从这个开发的黄金法则考虑，选择微信小游戏而不是选择其它小游戏是不是也好理解了。</p><h2 id="_3-学习编程-我需要学习哪些课程" tabindex="-1">3，学习编程，我需要学习哪些课程？ <a class="header-anchor" href="#_3-学习编程-我需要学习哪些课程" aria-label="Permalink to &quot;3，学习编程，我需要学习哪些课程？&quot;">​</a></h2><p>二胖：</p><blockquote><p>我认为我们学习一项技能的时候，应该采取的是<strong>项目驱动式学习</strong>，即需要用到什么东西时不会了再去学，而不是先填鸭式的都填进脑子，并且在学习的过程中我们还不知道它这是干嘛用的，等之后用到了，甚至不记得自己学过，反而查资料才会想起：哦，原来我之前学的 xx 科目是这个用处啊，可是我当时并没有好好学。很多时候学生时间的浪费可能还是要怪老师、怪学校，他们一开始没给我们做好充分的课程介绍。所以，在经过比较多的编程和项目实践后，我认为一个比较好的学习方式是，<strong>改良版的项目驱动学习法</strong>。即：</p><p>学习一段时间，做个小项目，将做项目遇到的问题记下来，针对性地学习相关知识，然后再实践，再学一段时间理论，让知识成网状发射状地变大。当然，<strong>项目驱动式学习有一个弊端，就是每次学习的知识都是项目所需要的，很零碎、不成体系</strong>，所以需要改良，即在采取项目驱动学习法的时候每天抽一段时间去完整地读一本书，或者一个相关问题的完整介绍，这样就很容易把一些知识成体系地串起来。这样一段时间下来，慢慢的，你就知道我们为什么要学那么多科目，学这些科目能干什么。</p></blockquote><p>二胖说的项目驱动式学习，有个老外教育家很早以前就给它起了一个专有名词：PBL（Project Based Learning），翻译成中文就是<strong>项目驱动式学习</strong>。这个方法很有名气，国内北京九渡河小学搞素质教育用的也是 PBL 大法，在网上有介绍，很成功也很有名，感兴趣的朋友可以搜索看看。</p><p>PBL 是一种理论+实践相结合的学习方法，如果仅是学习理论，会觉得枯燥无以为继，很难坚持；如果仅是实践，又陷于末端细节了，正如作者二胖所说，很零碎、不成体系。</p><p>那怎么办呢？</p><p>答案就是使用 PBL 项目驱动式学习大法。其实在国内软件公司，一直都有这种模式，只是大家没有注意往这个名字上想。公司里软件项目组流行的<strong>师傅 1v1 带徒弟</strong>做项目的方式，就是 PBL 方法，在做项目的过程中，师傅一边给徒弟派任务让徒弟练习技能，一边为其答疑解惑、夯实理论根基。</p><p>我在《微信小游戏开发》这套书中，采用的就是这种师傅带徒弟、PBL 实战教学法。整套书练习的是一个项目——不是很多个项目是一个项目，很多教程或图书里面列举的示例很散，这套书不是，为了减少学习者的心智认知负担，整套书只有一个实战项目，这个项目就像公司里面的实际项目一样，它是从一点一滴慢慢进化、慢慢完善的，系统化的理论知识是在项目进化的过程中不断渗透进去的。</p><p>读这套书，就像旁边有一个师傅，在耳提面命手把手教你如何开发项目一样，你不仅在学习编程技能，还在实践中不知不觉学习了必要的计算机基础、网络协议、数据库、设计模式、面向对象、编程规范等等相关的理论内容。</p><blockquote><p>注：《微信小游戏开发》是以微信小游戏开发为技术栈，系统化讲解全栈开发的一套书，并且是在 PBL 案例实战中讲解的。</p></blockquote><p><img src="'+r+'" alt="image-20231015223150994"></p><h2 id="_4-学习编程要不要制定一个计划" tabindex="-1">4，学习编程要不要制定一个计划？ <a class="header-anchor" href="#_4-学习编程要不要制定一个计划" aria-label="Permalink to &quot;4，学习编程要不要制定一个计划？&quot;">​</a></h2><p>二胖：</p><blockquote><p>我认为不只是编程需要制定计划，其他任何的学习和工作都需要制定计划。我从 13 年上大学就开始定期给自己制定计划，这个习惯也一直坚持到了现在，受益匪浅。</p></blockquote><p>当然要有一个可行的计划，凡事预则立，不预则废嘛。为了方便学习者制订计划，我将《微信小游戏开发》这套书的全部内容划分成了 90 课，按部就班，一步学习一课就好了，稳扎稳打，步步为营。</p><img src="'+s+'" style="zoom:25%;"><h2 id="_5-学习编程要不要记笔记" tabindex="-1">5，学习编程要不要记笔记？ <a class="header-anchor" href="#_5-学习编程要不要记笔记" aria-label="Permalink to &quot;5，学习编程要不要记笔记？&quot;">​</a></h2><p>二胖：</p><blockquote><p>笔记是必须要做的，并且记笔记是一个长期的过程。在学习的过程中，我们一直都在追求一种最高效的学习方法，比如，同一个班的同学，他用他的学习方法考上了清华，而你用同样的方法就不行，为什么？因为他的方法对他自己而言是定制化的，可能且大概率不适合你，比如他的笔记你不一定能看懂，因为他可能设计了一套属于自己的符号。而就编程而言，很多同学说善用搜索引擎，是对的，可是搜索引擎搜出来的是别人的答案。你照搬过来，也许可以用，但是你没有记住，这些知识并不属于你，之后你可能还会遇到同样的问题，又要再搜索一遍，可能很难找到之前的那个答案了。但是记笔记就不一样，记笔记是定制化的，对你自己定制，你可以用自己最爽的表达方式来描述一个问题，是自己写给自己看的东西，看了几遍之后就能非常迅速和容易地理解。之后遇到相同的问题可以快速地通过找笔记解决。</p></blockquote><p>全世界公认最快的学习方法是费曼学习法，即把学到的内容及时用自己的方式和语言输出一遍。形式多种多种，可以是文字、语音，或者视频。</p><p>为了方便学习者做笔记，我为学习者专门在书外又编写了一套自学讲义，一共是 90 个 PDF，正好一课对应一个。在学习的时候，你可以以此讲义为基础，独立编写自己的学习心得，以加深理解和记忆。</p><img src="'+n+'" alt="image-20231015223235532" style="zoom:50%;"><h2 id="_6-多久能学会编程" tabindex="-1">6，多久能学会编程？ <a class="header-anchor" href="#_6-多久能学会编程" aria-label="Permalink to &quot;6，多久能学会编程？&quot;">​</a></h2><p>二胖：</p><blockquote><p>其实这个问题是没有答案的，如果只是想做出一个小应用，2 个月足矣，而就我个人而言，我认为学习编程不是学习一种编程语言，而是学习一个生态，一个计算机系统，所以无止境。</p></blockquote><p>没错，现在学习任何一门技术，学习的都是整个生态。《微信小游戏开发》其实是以讲解整个微信小游戏开发生态为主线的，它并不是单单讲解 JS 的，它里面除了 JS，其实还有 SQL、Node.js、Go 等语言。</p><h2 id="_7-我应该选择什么资料-看什么书" tabindex="-1">7，我应该选择什么资料，看什么书？ <a class="header-anchor" href="#_7-我应该选择什么资料-看什么书" aria-label="Permalink to &quot;7，我应该选择什么资料，看什么书？&quot;">​</a></h2><p>二胖：</p><blockquote><p>其实这个问题也是很多编程新手容易困惑的问题。网络上拥有我们一辈子都看不完的教程和资料，所以现在应该不会存在找不着视频教程、找不着书看的问题。而问题就是我们不知道看什么视频、看什么书。从开始学编程到现在，我也买了上百本书，而真正适合自己的好书并不多。而视频教程的问题就更严重了，东看一点、西看一点，知识很难组织成网络。所以**学习编程的过程中，我们遇到的最大的问题是：当我们遇到问题的时候，在大量资料面前，我们不知道选择什么资料去学习。**即使我们使用项目驱动式学习的方法找到了我们的方向，但是同一个路径下，也有很多资料。前文列举的项目驱动式学习的图中，我们是自上而下的去发现问题，然后再解决问题。<strong>如果能有人帮我们组织好学习路径，然后自下而上地去学习，那么效率可能会提高很多。</strong></p></blockquote><p>我在编写《微信小游戏开发》这套书之前，我没有读到过二胖这篇文章；我是在书已经出版以后，看到了这篇文章。二胖谈论的这个问题，其实是编程初学者遇到的经典问题。</p><p><img src="'+i+'" alt="img"></p><p>我编写这套书，就是想为初学者组织好一条像登泰山一样的路径，带领初学者自下而上一步一步地学习。可能由于我水平有限，加上时间仓促等其他原因，我未必达到了我心目中的理想目标，但我确实是这样去做的。包括我的其它在线课程，其实也都是有意在贯彻 PBL 实战教学思想。</p><p>好了，关于二胖的文章就写这么多吧，二胖的原文更精彩，阅读原文你可能更有感触，有时间建议阅读一下。</p><p>下面我谈一下初学者基于我这套书怎么学习，有两种方式：</p><p>1，把书买回去，把讲义下载到本地，按课，一步一步学习即可。在京东、当当商城均有销售链接。</p><p>2，报名我特意推出的 1v1 师徒培训班。</p><h2 id="_1v1-师徒培训班" tabindex="-1">1v1 师徒培训班 <a class="header-anchor" href="#_1v1-师徒培训班" aria-label="Permalink to &quot;1v1 师徒培训班&quot;">​</a></h2><p>师徒培训班是 1v1 辅导，交流的主要方式是邮件+微信，主要的内容除了全套书的内容，另外再加上一个你自己喜欢的、钟意的项目实战。我会额外带着你，把你自己的这个项目给做出来。</p><p>什么意思？</p><p>具体来讲，就是不仅教你学会微信小游戏开发这门生态技术，还带着你做了一个“项目外包”。与一般的项目外包不同点在于，你是主角，是主要的开发者，我提供指导；这样在项目完成后，你可以继续自己修改和改善项目。换言之，教的是三点水的“渔”。</p><p>形式是 1v1 的，这和公司里面老人带新人的方式还有什么区别呢？</p><p>1v1 师徒培训班是收费的，且价格对某些人来说可能会有一些小贵。不过想一想，你做一个外包项目需要多少钱？何况外包那种形式是一次性成果，你自己并没有学会任何修改它的技能？</p><p>1v1 师徒培训班随报随学，只限 60 名，名额报完不再收，这也是为了保证效果。还有，培训结束以后，师徒关系仍然是存续的，你在自修过程中有什么技术问题仍然可以随时找我讨论。</p><p>如果你对 1v1 师徒培训班感兴趣，加我微信 9830131，发送暗号 1v1。现在报名还有优惠。</p><h2 id="《微信小游戏开发》海报" tabindex="-1">《微信小游戏开发》海报 <a class="header-anchor" href="#《微信小游戏开发》海报" aria-label="Permalink to &quot;《微信小游戏开发》海报&quot;">​</a></h2><p>最后附一张出版社为这套书精心制作的海报：</p><p><img src="'+c+'" alt="img"></p>',70),_=[h];function d(u,b,m,g,q,k){return p(),t("div",null,_)}const v=a(l,[["render",d]]);export{f as __pageData,v as default};
