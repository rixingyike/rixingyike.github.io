import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-B4u5Po8L.js";const t={};function h(k,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="flash-player的垃圾内存回收机制-能否强制回收" tabindex="-1"><a class="header-anchor" href="#flash-player的垃圾内存回收机制-能否强制回收"><span>Flash Player的垃圾内存回收机制：能否强制回收？</span></a></h1><p>在Adobe Flash Player 10中，AS3的内部垃圾回收机制是怎样的？程序员可以强制FP回收内存吗？答案是否定的，但有方法。</p><h3 id="_1-毛主席请猫吃辣椒的故事" tabindex="-1"><a class="header-anchor" href="#_1-毛主席请猫吃辣椒的故事"><span>1. 毛主席请猫吃辣椒的故事</span></a></h3><p>建国初期，国家正在对资本主义工商业进行社会主义改造，毛泽东问周恩来、刘少奇等，如何才能让猫吃辣椒？刘少奇说，把猫逮住，用筷子捅下去。周总理说，先把猫饿上三天，然后把辣椒裹在肉里给它吃。毛主席都不赞成这两种做法，毛主席说，把辣椒抹在猫屁股上，猫觉得辣自然就去会舔，而且还会因为这样做而兴奋不已。</p><h3 id="_2-强制垃圾内存回收的代码" tabindex="-1"><a class="header-anchor" href="#_2-强制垃圾内存回收的代码"><span>2. 强制垃圾内存回收的代码</span></a></h3><p>AS3程序员没有办法强制Flash Player进行垃圾回收，但有一种类似于毛主席请猫吃辣椒的方法可以使用。</p><p>MoonSpirit在天地会撰写过一篇关于强制垃圾回收的文章：[<a href="http://flash.9ria.com/viewthread.php?tid=234" target="_blank" rel="noopener noreferrer">as hack技术]垃圾回收机强制执行</a>。文中例证，使用LocalConnection连接非法地址，并捕获导常，可以强制进行垃圾回收。<a href="https://yishulun.com/" target="_blank" rel="noopener noreferrer">作者</a>在MoonSpirit的基础上，简单修改了一下代码，如下：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Bitmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BitmapData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">net</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LocalConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	 * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">author</span><span style="--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> LIYI https:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//yishulun.com/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	 * 修改自MoonSpirit的强制垃圾回收测试代码</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	public</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> GarbageCollectionTest</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> extends</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> const</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> SQR_AMOUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = 10000; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 方块数量        </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> _container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 容器sprite</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> _sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 所有方块的引用</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 强制垃圾回收使用的对象</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> conn1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LocalConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> conn2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LocalConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		public</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> GarbageCollectionTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">new</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			addChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">			//initNoBitmapDataView( );// 峰值4111K，手动回收两次变为9K</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			initBitmapDataView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 峰值14K，最小为14K，手动回收基本无变化</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 初始化 通过通常手段 显示</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> initNoBitmapDataView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			layoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			unLayoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			removeChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 初始化 通过BitmapData快照 显示</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> initBitmapDataView</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			layoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			unLayoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			removeChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			doClearance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> layoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">new</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( );</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = 0; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SQR_AMOUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">++){</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">new</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">graphics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">beginFill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">graphics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">drawRect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(0,0,100,100);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">graphics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">endFill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">addChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 不显示</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> unLayoutTenThousandSqr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = 0; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SQR_AMOUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">++){</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				_container_sp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">removeChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				delete</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> _sqrList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 精髓，垃圾回收机强制调用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		private</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> function</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> doClearance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( ) : </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			trace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clear&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">new</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> LocalConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;liyi garbage collection 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">new</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> LocalConnection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;liyi garbage collection 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			}</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#E45649;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				conn2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后呢，作者调用doClearance方法，这次无论是否手动回收，内存占用无变化，如下图所示，这说明doClearance方法已经强制了垃圾内存回收，它作用了！</p><p>[此处有图，但被岁月冲走了]</p><p>那么，为什么创建两次没用的LocalConnection可以强制回收内存呢？</p><h3 id="_3-as3垃圾内存回收机制" tabindex="-1"><a class="header-anchor" href="#_3-as3垃圾内存回收机制"><span>3. AS3垃圾内存回收机制</span></a></h3><p>在Flash Player初始化运行时，会向操作系统申请一大块内存，如果程序很小，有可能根本用不了这么多内存，但FP在开始时不考虑这些，大多数情况下，第一次申请的内存总是不够用的。第一次申请的内存大小，与操作系统、浏览器环境有关。</p><p>当Flash Player发现已经申请的内存不够用时，它会再向操作系统申请一大块内存。但在申请之前，请注意，FP会尝试进行垃圾内存回收。那么它是如何回收的呢？</p><p>Flash Player在内部使用<strong>懒惰式引用计数回收方案</strong>进行垃圾内存回收，<strong>懒惰式</strong>指：FP并不会一次把所有可以回收的对象全部回收，它一次仅会回收一部分，如果内存不够用，它会向操作系统申请，如果系统无内存了，它会再次回收，如果全部回收了仍不够用，Game Over!<strong>引用计数</strong>指：FP在内部给每个对象标记一个记号，当没有任何对象引用此对象时，它即是可以被回收的；如果一个容器内有许多相互关联的对象，当把这个容器从显示列表中移除，并且置为null后，它也是可以被回收的。</p><p>在小节2中，<a href="https://yishulun.com/" target="_blank" rel="noopener noreferrer">作者</a>问到为什么要手动单击两次“运行垃圾回收器”按钮，这是由于FP垃圾回收机制的<strong>懒惰</strong>性造成的。</p><p>在清楚了FP的内部垃圾回收机制之后，我们便可以回答，为什么创建两次没用的LocalConnection，并且连接并不存在的地址，故意抛出异常然后捕获，可以强制垃圾回收呢？因为，在AS3中LocalConnection是比较占用内存的对象，两次创建该类对象并尝试进行连接的内存开销大小足以请Flash Player重新向操作系统申请内存，而在申请之前，FP会尝试回收。原理即是这么简单，非独使用LocalConnection可以，其它较耗内存的对象也可以。</p><p>2008年5月</p>`,18)]))}const r=i(t,[["render",h],["__file","06.html.vue"]]),d=JSON.parse('{"path":"/posts/2008/06.html","title":"Flash Player的垃圾内存回收机制：能否强制回收？","lang":"zh-CN","frontmatter":{"sidebar":false,"date":"2008-05-01T00:00:00.000Z","tags":["AS3 Expert"],"description":"Flash Player的垃圾内存回收机制：能否强制回收？ 在Adobe Flash Player 10中，AS3的内部垃圾回收机制是怎样的？程序员可以强制FP回收内存吗？答案是否定的，但有方法。 1. 毛主席请猫吃辣椒的故事 建国初期，国家正在对资本主义工商业进行社会主义改造，毛泽东问周恩来、刘少奇等，如何才能让猫吃辣椒？刘少奇说，把猫逮住，用筷子捅...","head":[["meta",{"property":"og:url","content":"https://yishulun.com/posts/2008/06.html"}],["meta",{"property":"og:site_name","content":"艺述论"}],["meta",{"property":"og:title","content":"Flash Player的垃圾内存回收机制：能否强制回收？"}],["meta",{"property":"og:description","content":"Flash Player的垃圾内存回收机制：能否强制回收？ 在Adobe Flash Player 10中，AS3的内部垃圾回收机制是怎样的？程序员可以强制FP回收内存吗？答案是否定的，但有方法。 1. 毛主席请猫吃辣椒的故事 建国初期，国家正在对资本主义工商业进行社会主义改造，毛泽东问周恩来、刘少奇等，如何才能让猫吃辣椒？刘少奇说，把猫逮住，用筷子捅..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T15:36:59.000Z"}],["meta",{"property":"article:tag","content":"AS3 Expert"}],["meta",{"property":"article:published_time","content":"2008-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-21T15:36:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flash Player的垃圾内存回收机制：能否强制回收？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2008-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-21T15:36:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李艺\\",\\"url\\":\\"https://yishulun.com\\"}]}"]]},"headers":[{"level":3,"title":"1. 毛主席请猫吃辣椒的故事","slug":"_1-毛主席请猫吃辣椒的故事","link":"#_1-毛主席请猫吃辣椒的故事","children":[]},{"level":3,"title":"2. 强制垃圾内存回收的代码","slug":"_2-强制垃圾内存回收的代码","link":"#_2-强制垃圾内存回收的代码","children":[]},{"level":3,"title":"3. AS3垃圾内存回收机制","slug":"_3-as3垃圾内存回收机制","link":"#_3-as3垃圾内存回收机制","children":[]}],"git":{"createdTime":1671674770000,"updatedTime":1695310619000,"contributors":[{"name":"LIYI","username":"LIYI","email":"9830131@qq.com","commits":5,"url":"https://github.com/LIYI"}]},"readingTime":{"minutes":4.28,"words":1283},"filePathRelative":"posts/2008/06.md","localizedDate":"2008年5月1日","excerpt":"\\n<p>在Adobe Flash Player 10中，AS3的内部垃圾回收机制是怎样的？程序员可以强制FP回收内存吗？答案是否定的，但有方法。</p>\\n<h3>1. 毛主席请猫吃辣椒的故事</h3>\\n<p>建国初期，国家正在对资本主义工商业进行社会主义改造，毛泽东问周恩来、刘少奇等，如何才能让猫吃辣椒？刘少奇说，把猫逮住，用筷子捅下去。周总理说，先把猫饿上三天，然后把辣椒裹在肉里给它吃。毛主席都不赞成这两种做法，毛主席说，把辣椒抹在猫屁股上，猫觉得辣自然就去会舔，而且还会因为这样做而兴奋不已。</p>\\n<h3>2. 强制垃圾内存回收的代码</h3>\\n<p>AS3程序员没有办法强制Flash Player进行垃圾回收，但有一种类似于毛主席请猫吃辣椒的方法可以使用。</p>","autoDesc":true}');export{r as comp,d as data};
