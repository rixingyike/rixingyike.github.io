import{_ as a,o as e,c as s,Q as p}from"./chunks/framework.25d5caa7.js";const t="/assets/image-20230411070305528.2d7fd37f.png",o="/assets/image-20230520193735778.74cd85f6.png",n="/assets/image-20240110103310614.f88f4893.png",l="/assets/image-20230611150634840.e60a547c.png",r="/assets/image-20240110104010105.9b550cef.png",i="/assets/image-20231223211956865.d4724ce4.png",c="/assets/image-20231223212137478.e0728262.png",m="/assets/image-20240111234002702.1dfd465c.png",h="/assets/image-20240111234318674.e3053e1d.png",d="/assets/image-20240121130022050.369af5c6.png",v=JSON.parse('{"title":"《微信小游戏开发》勘误与增补列表","description":"","frontmatter":{"title":"《微信小游戏开发》勘误与增补列表","date":"2023-03-08T23:33:47.000Z","bookToc":false,"star":true},"headers":[],"relativePath":"posts/2023/02.md","filePath":"posts/2023/02.md"}'),g={name:"posts/2023/02.md"},u=p('<h1 id="《微信小游戏开发》勘误与增补列表" tabindex="-1">《微信小游戏开发》勘误与增补列表 <a class="header-anchor" href="#《微信小游戏开发》勘误与增补列表" aria-label="Permalink to &quot;《微信小游戏开发》勘误与增补列表&quot;">​</a></h1><p>由于水平有限，时间仓促，书中难免有遗漏、错愕之处，恳求读者朋友斧正。如有发现，可以给我发邮件9830131@qq.com，或加我的微信（9830131）告诉我。</p><p>下面是2023年2月&amp;3月版本1已经发现的勘误列表。</p><h2 id="前端篇" tabindex="-1">前端篇 <a class="header-anchor" href="#前端篇" aria-label="Permalink to &quot;前端篇&quot;">​</a></h2><h3 id="p17" tabindex="-1">P17 <a class="header-anchor" href="#p17" aria-label="Permalink to &quot;P17&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/rixingyike/images@master/202320230711225054-2023-07-11-22-50-56.png" alt="20230711225054-2023-07-11-22-50-56"></p><p>有读者找不到对应内容，在箭头处、句号前面可以添加一句：第16课拓展部分。</p><h3 id="p55" tabindex="-1">P55 <a class="header-anchor" href="#p55" aria-label="Permalink to &quot;P55&quot;">​</a></h3><p>如下所示，<code>0+&quot;10&quot;</code>结果是<code>&quot;010&quot;</code>，并不是数值10；如果想将数字字符串转化为数字，直接在前面加符号“+”，不需要数字 0。截图红框内应改为：</p><blockquote><p>使用加号与一个数字拼接：+ &quot;10&quot;，这种方式最简单直接，其实本质上也是隐式转换。</p></blockquote><p><img src="'+t+'" alt="image-20230411070305528"></p><p>该处由@<strong>MuninnC</strong>指出，感谢勘误。</p><h3 id="p156-增补" tabindex="-1">P156(增补) <a class="header-anchor" href="#p156-增补" aria-label="Permalink to &quot;P156(增补)&quot;">​</a></h3><img src="'+o+`" alt="image-20230520193735778" style="zoom:67%;"><p>在箭头所示的地方（..进行改写。）、句号后面，添加这样一句话：</p><blockquote><p>注意这里的3处事件，指代码清单4-2中的click、mousemove、click三个事件，分别将以touchEnd、touchMove和touchEnd事件改写。</p></blockquote><h3 id="p262" tabindex="-1">P262 <a class="header-anchor" href="#p262" aria-label="Permalink to &quot;P262&quot;">​</a></h3><p>第一处，第4行、第5行，两行注释应改为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">4.let d = {num: 100} // 变量d存在于栈中，{mum: 100}作为对象存在于堆内存中</span></span>
<span class="line"><span style="color:#e1e4e8;">5.let e = [100, 200] // 变量e存在于栈中，[100, 200]作为对象存在于堆内存中</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">4.let d = {num: 100} // 变量d存在于栈中，{mum: 100}作为对象存在于堆内存中</span></span>
<span class="line"><span style="color:#24292e;">5.let e = [100, 200] // 变量e存在于栈中，[100, 200]作为对象存在于堆内存中</span></span></code></pre></div><p>第二处，划线部分应改为：</p><p>其中c、b、a位于栈内存，我们是直接操作的；而e、d保存的是引用地址......</p><p><img src="`+n+'" alt="image-20240110103310614"></p><h3 id="p281" tabindex="-1">P281 <a class="header-anchor" href="#p281" aria-label="Permalink to &quot;P281&quot;">​</a></h3><p><img src="'+l+'" alt="image-20230611150634840"></p><p>因为有读者对这里理解有疑问，在“第7行...”这一句的后面，需要加一段解释内容。内容如下：</p><p>第9行，为什么让#pos指向defaultPos也没用？因为第一次执行reset时，会把引用对象defaultPos赋值给#pos，之后小球在运动过程中更新的都是#pos。也就是说，默认值对象defaultPos被“污染”了，从第二次调用reset开始，它不能再作为默认值对象被使用了，因为它里面的x、y值不是默认值了。</p><h3 id="p480" tabindex="-1">P480 <a class="header-anchor" href="#p480" aria-label="Permalink to &quot;P480&quot;">​</a></h3><p>红色划线部分应改为：...渲染上下文对象属于哪个画布，就对哪个画布生效。</p><p><img src="'+r+'" alt="image-20240110104010105"></p><h2 id="后端篇" tabindex="-1">后端篇 <a class="header-anchor" href="#后端篇" aria-label="Permalink to &quot;后端篇&quot;">​</a></h2><h3 id="p22-3课1小节-使用wx-getfuzzylocation代替" tabindex="-1">P22，3课1小节 使用wx.getFuzzyLocation代替 <a class="header-anchor" href="#p22-3课1小节-使用wx-getfuzzylocation代替" aria-label="Permalink to &quot;P22，3课1小节 使用wx.getFuzzyLocation代替&quot;">​</a></h3><p>也在3.1小节，与上面的问题是相关的。由于微信官方对地理位置权限的加强管理，这里有较多变化，具体见：<a href="https://yishulun.com/posts/2023/52.html" target="_blank" rel="noreferrer">如何在微信小游戏/小游戏中获取地理位置信息？</a></p><p>这里有代码清单1-12、1-14、1-15都涉及修改。</p><h3 id="p27-关于lbs域名白名单的设置" tabindex="-1">P27，关于LBS域名白名单的设置 <a class="header-anchor" href="#p27-关于lbs域名白名单的设置" aria-label="Permalink to &quot;P27，关于LBS域名白名单的设置&quot;">​</a></h3><p>在书上27页，如下图1-10这个位置：</p><p><img src="'+i+'" alt="image-20231223211956865"></p><p>书上提到的一个位于这里（<a href="https://lbs.qq.com/service/webService/webServiceGuide/webServiceGcoder%EF%BC%89%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%8C%E7%8E%B0%E5%9C%A8%E6%9C%89%E4%BA%86%E4%BF%AE%E6%94%B9%EF%BC%8C%E4%B8%8D%E5%86%8D%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%A1%AB%E5%86%99key%EF%BC%8C%E6%89%80%E4%BB%A5%E5%8E%9F%E4%B9%A6%E4%B8%8A%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E4%B8%80%E4%B8%8B%E3%80%82" target="_blank" rel="noreferrer">https://lbs.qq.com/service/webService/webServiceGuide/webServiceGcoder）的在线测试工具，现在有了修改，不再可以直接填写key，所以原书上的测试方法需要修改一下。</a></p><p>目前在测试开发阶段最简便的设置白名单的方式，是将白名单列表留空：</p><p><img src="'+c+'" alt="image-20231223212137478"></p><p>留空代表不限制调用来源。</p><p>留空以后，可以使用下面两个方法测试API Key的可用性：</p><ul><li><p>1，直接在浏览器中访问：<a href="https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1" target="_blank" rel="noreferrer">https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1</a></p></li><li><p>2，在终端中访问：curl &quot;<a href="https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1" target="_blank" rel="noreferrer">https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1</a>&quot;</p></li></ul><p>注意将key替换成自己的key。</p><p>如果不这样设置，或按原方法设置，可能会遇到这样的一个错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&quot;message&quot;: &quot;请求来源未被授权，解决方法见：https://lbs.qq.com/faq/serverFaq/webServiceKey。此次请求无来源信息&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&quot;message&quot;: &quot;请求来源未被授权，解决方法见：https://lbs.qq.com/faq/serverFaq/webServiceKey。此次请求无来源信息&quot;</span></span></code></pre></div><p>这个错误可能出现在Web请求或curl请求中，没有来源信息也属于来源未被授权的情况之一。</p><p>由于腾讯LBS官方SDK及文档在以后可能存在变化，在设置白名单时，最好当时查看在开发者工具网络面板中出现的域名，并将其设置在腾讯LBS管理后台的白名单中。被设置的域名可能继续是servicewechat.com，也可能是其它域名。</p><h3 id="p32、p33-4课1小节-在线资源地址替换" tabindex="-1">P32、P33，4课1小节 在线资源地址替换 <a class="header-anchor" href="#p32、p33-4课1小节-在线资源地址替换" aria-label="Permalink to &quot;P32、P33，4课1小节 在线资源地址替换&quot;">​</a></h3><p>由于原在线存储桶可能存在到期，禁止访问等问题，对于下面的在线资源地址：</p><blockquote><p><a href="https://cloud-1252822131.cos.ap-beijing.myqcloud.com/images/bg.png" target="_blank" rel="noreferrer">https://cloud-1252822131.cos.ap-beijing.myqcloud.com/images/bg.png</a><a href="https://cloud-1252822131.cos.ap-beijing.myqcloud.com/fonts/webfont.ttf" target="_blank" rel="noreferrer">https://cloud-1252822131.cos.ap-beijing.myqcloud.com/fonts/webfont.ttf</a></p></blockquote><p>可以将前面的cloud-1252822131.cos.ap-beijing.myqcloud.com替换为yishulun.com/wegame_ap，例如第一个地址替换后是：</p><blockquote><p><a href="https://yishulun.com/wegame_ap/images/bg.png" target="_blank" rel="noreferrer">https://yishulun.com/wegame_ap/images/bg.png</a></p></blockquote><p>如果原地址可用当用，不可用时，可换用替换后的地址。</p><h3 id="p44-2-1文件路径标注" tabindex="-1">P44 2.1文件路径标注 <a class="header-anchor" href="#p44-2-1文件路径标注" aria-label="Permalink to &quot;P44 2.1文件路径标注&quot;">​</a></h3><p>在第 2 章第 4 课中，代码清单中的路径“JS:第2章\\4.1\\game.js”都应该是“JS:第2章\\2.1\\game.js”</p><p><img src="'+m+`" alt="image-20240111234002702"></p><h3 id="p57-修改gametoplayer-init" tabindex="-1">P57 修改gameTopLayer.init <a class="header-anchor" href="#p57-修改gametoplayer-init" aria-label="Permalink to &quot;P57 修改gameTopLayer.init&quot;">​</a></h3><p>在代码清单 2-14 中，应该添加对gameTopLayer.init方法调用的改动：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// gameTopLayer.init()</span></span>
<span class="line"><span style="color:#E1E4E8;">  gameTopLayer.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">({ game: </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">init</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// gameTopLayer.init()</span></span>
<span class="line"><span style="color:#24292E;">  gameTopLayer.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">({ game: </span><span style="color:#005CC5;">this</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>前面P53 页只走到了gameTopLayer.init()，这一节应该是有添加gameTopLayer.init({ game: this })这一发动的，但是 在P57 页的代码清单2-17 中没有体现。</p><h3 id="p59-2-2文件路径标注" tabindex="-1">P59 2.2文件路径标注 <a class="header-anchor" href="#p59-2-2文件路径标注" aria-label="Permalink to &quot;P59 2.2文件路径标注&quot;">​</a></h3><p>同上一条，第2章第5课中，代码清单中的路径“JS:第2章\\4.2\\game.js”都应该是“JS:第2章\\2.2\\game.js”</p><p><img src="`+h+'" alt="image-20240111234318674"></p><h3 id="p72-排行榜设置位置" tabindex="-1">P72（排行榜设置位置） <a class="header-anchor" href="#p72-排行榜设置位置" aria-label="Permalink to &quot;P72（排行榜设置位置）&quot;">​</a></h3><p>原游戏礼包配置、游戏圈功能、活动运营配置、基础运营素材和排行榜设置已迁移到“游戏运营工具箱”，目前在：功能→游戏运营工具箱→排行榜设置。</p><p>图示划线部分应修改为：功能→游戏运营工具箱→排行榜设置。</p><p><img src="'+d+'" alt="image-20240121130022050"></p><p>京东购买链接：<a href="https://item.jd.com/10070363837259.html" target="_blank" rel="noreferrer">https://item.jd.com/10070363837259.html</a></p>',68),b=[u];function q(E,y,_,f,P,k){return e(),s("div",null,b)}const F=a(g,[["render",q]]);export{v as __pageData,F as default};
