import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,f as t}from"./app-2d091527.js";const p={},e=t(`<h1 id="e4x用法简要" tabindex="-1"><a class="header-anchor" href="#e4x用法简要" aria-hidden="true">#</a> E4X用法简要</h1><p>E4X语法是AS3对ECMAScript标准最前卫的实现，也是目前所有高级编程语言中操作XML最为方便的方式之一。仅仅因为AS3实现了E4X，作为程序员至少也应该了解它一下，因为它是那样的简洁、优雅。</p><p>因为AS3实现的是ECMAScript 357 for XML标准（ECMAScript对XML的扩展标准），简称为E4X。自有E4X以来，AS2程序员应该忘掉以前惯用的XMLDocument、 XMLNode、XMLParser 和 XMLTag。在AS3中，操作XML仅需要记住两个类：XML与XMLList。</p><p><strong>主要概念：</strong></p><ol><li><p>元素(Element，或称为节点Node)：XML 文档中的单个项目，它被标识为开始标签和结束标签之间包含的内容（包括标签）。XML 元素可以包含文本数据或其它元素，也可以为空。</p></li><li><p>属性 (Attribute)：与元素关联的命名值，它以 attributename=&quot;value&quot; 格式写入到元<br> 素的开始标签中，而不是编写为嵌套在元素内的单独子元素。</p></li></ol><p>设有如下XML：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>var myXML:XML =
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>order</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>1<span class="token punctuation">&#39;</span></span> <span class="token attr-name">author</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>sban<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuName</span><span class="token punctuation">&gt;</span></span>burger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuName</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">&gt;</span></span>3.95<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>                            
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>as3 expert<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>2<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menuName</span><span class="token punctuation">&gt;</span></span>fries<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuName</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">&gt;</span></span>1.45<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>order</span><span class="token punctuation">&gt;</span></span>;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面以实例讲解几个主要的E4X操作方法：</p><h2 id="_1-查找包括指定属性的元素列表" tabindex="-1"><a class="header-anchor" href="#_1-查找包括指定属性的元素列表" aria-hidden="true">#</a> 1，查找包括指定属性的元素列表</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;@author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上例代码仅返回第一个item节点。</p><h2 id="_2-查找指定属性的值为x的元素列表" tabindex="-1"><a class="header-anchor" href="#_2-查找指定属性的值为x的元素列表" aria-hidden="true">#</a> 2，查找指定属性的值为X的元素列表</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span>@id <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上例代码仅返回第一个item节点。</p><h2 id="_3-在查找条件中使用并、或、四则运算" tabindex="-1"><a class="header-anchor" href="#_3-在查找条件中使用并、或、四则运算" aria-hidden="true">#</a> 3，在查找条件中使用并、或、四则运算</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span>@id <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> @id <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span>@id <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> @id <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span>@id <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-查找含有指定节点名称的元素列表" tabindex="-1"><a class="header-anchor" href="#_4-查找含有指定节点名称的元素列表" aria-hidden="true">#</a> 4，查找含有指定节点名称的元素列表</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-如果有命名空间-在读取元素时必须加命名空间前缀" tabindex="-1"><a class="header-anchor" href="#_5-如果有命名空间-在读取元素时必须加命名空间前缀" aria-hidden="true">#</a> 5，如果有命名空间，在读取元素时必须加命名空间前缀</h2><p>把用例XML修改为如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>var myXML:XML =
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>order</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>s</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://yishulun.com/as3expert<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>item</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">author</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sban<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>menuName</span><span class="token punctuation">&gt;</span></span>burger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuName</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>price</span><span class="token punctuation">&gt;</span></span>3.95<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>title</span><span class="token punctuation">&gt;</span></span>as3 expert<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">s:</span>item</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>item</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>menuName</span><span class="token punctuation">&gt;</span></span>fries<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuName</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>price</span><span class="token punctuation">&gt;</span></span>1.45<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">s:</span>item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">s:</span>order</span><span class="token punctuation">&gt;</span></span>;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，问题1的答案便为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token literal-property property">ns</span> <span class="token operator">:</span>Namespace <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Namespace</span><span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://yishulun.com/as3expert&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span>ns<span class="token operator">:</span><span class="token operator">:</span>item<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;@author&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其它操作与之类似。</p><h2 id="_6-如何向xmllist中推入一个元素" tabindex="-1"><a class="header-anchor" href="#_6-如何向xmllist中推入一个元素" aria-hidden="true">#</a> 6，如何向XMLList中推入一个元素</h2><p>简单，使用加号：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>items += <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>item</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>s</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://yishulun.com/as3expert<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>menuName</span><span class="token punctuation">&gt;</span></span>gumbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menuName</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">s:</span>price</span><span class="token punctuation">&gt;</span></span>2.45<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">s:</span>item</span><span class="token punctuation">&gt;</span></span>;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-如何从xmllist中删除一个元素" tabindex="-1"><a class="header-anchor" href="#_7-如何从xmllist中删除一个元素" aria-hidden="true">#</a> 7，如何从XMLList中删除一个元素</h2><p>删除不能使用减号(why?)，须使用delete关键字：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>delete items.(@id == 1)[0];
delete不能作用于XMLList对象，操作对象必须是XML。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-如何在xmllist中指定位置插入xml" tabindex="-1"><a class="header-anchor" href="#_8-如何在xmllist中指定位置插入xml" aria-hidden="true">#</a> 8，如何在XMLList中指定位置插入XML</h2><p>先把XMLList包装为XML，然后使用XML的appendChild，prependChild，insertChildAfter，insertChildBefore方法实现。</p><h2 id="_9-如何获取子子节点列表或属性列表" tabindex="-1"><a class="header-anchor" href="#_9-如何获取子子节点列表或属性列表" aria-hidden="true">#</a> 9，如何获取子子节点列表或属性列表</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token literal-property property">items</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span><span class="token punctuation">.</span>ns<span class="token operator">:</span><span class="token operator">:</span>menuName<span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token literal-property property">ids</span> <span class="token operator">:</span>XMLList <span class="token operator">=</span> myXML<span class="token punctuation">.</span><span class="token punctuation">.</span>@id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2008年5月</p><blockquote><p>2021更新：AS3原生支持的E4X语法，操作XML太方便了。现在跨系统数据交换基本都是使用json格式了，e4x这么好用的原生语法也很少使用了。</p></blockquote>`,36),o=[e];function c(l,i){return s(),n("div",null,o)}const k=a(p,[["render",c],["__file","05.html.vue"]]);export{k as default};
