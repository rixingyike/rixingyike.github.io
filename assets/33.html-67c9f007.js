const e=JSON.parse('{"key":"v-1db15446","path":"/posts/2022/33.html","title":"JS如何返回异步调用的结果？","lang":"zh-CN","frontmatter":{"sidebar":false,"date":"2022-12-26T15:11:43.000Z","description":"JS如何返回异步调用的结果？ 这个问题作者认为是所有从后端转向前端开发的程序员，都会遇到的第一问题。JS前端编程与后端编程最大的不同，就是它的异步机制，同时这也是它的核心机制。 为了更好地说明如何返回异步调用的结果，先看三个尝试异步调用的示例吧。 示例一：调用一个后端接口，返回接口返回的内容 function foo() { var result $.ajax({ url: \\"...\\", success: function(response) { result = response } }); return result // 返回：undefined }","head":[["meta",{"property":"og:url","content":"https://yishulun.com/posts/2022/33.html"}],["meta",{"property":"og:site_name","content":"艺述论博客"}],["meta",{"property":"og:title","content":"JS如何返回异步调用的结果？"}],["meta",{"property":"og:description","content":"JS如何返回异步调用的结果？ 这个问题作者认为是所有从后端转向前端开发的程序员，都会遇到的第一问题。JS前端编程与后端编程最大的不同，就是它的异步机制，同时这也是它的核心机制。 为了更好地说明如何返回异步调用的结果，先看三个尝试异步调用的示例吧。 示例一：调用一个后端接口，返回接口返回的内容 function foo() { var result $.ajax({ url: \\"...\\", success: function(response) { result = response } }); return result // 返回：undefined }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yishulun.com/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-06T13:48:40.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JS如何返回异步调用的结果？"}],["meta",{"property":"article:author","content":"LIYI"}],["meta",{"property":"article:published_time","content":"2022-12-26T15:11:43.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-06T13:48:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS如何返回异步调用的结果？\\",\\"image\\":[\\"https://yishulun.com/\\"],\\"datePublished\\":\\"2022-12-26T15:11:43.000Z\\",\\"dateModified\\":\\"2023-08-06T13:48:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LIYI\\",\\"url\\":\\"https://yishulun.com/\\"}]}"]]},"headers":[{"level":2,"title":"回调函数：最古老的异步结果返回方式","slug":"回调函数-最古老的异步结果返回方式","link":"#回调函数-最古老的异步结果返回方式","children":[]},{"level":2,"title":"ES2015：使用Promise对象与then方法链式调用","slug":"es2015-使用promise对象与then方法链式调用","link":"#es2015-使用promise对象与then方法链式调用","children":[]},{"level":2,"title":"ES2017：使用async/await语法关键字","slug":"es2017-使用async-await语法关键字","link":"#es2017-使用async-await语法关键字","children":[]},{"level":2,"title":"jQuery的Deferred Object（延迟对象）","slug":"jquery的deferred-object-延迟对象","link":"#jquery的deferred-object-延迟对象","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1672044678000,"updatedTime":1691329720000,"contributors":[{"name":"LIYI","email":"9830131@qq.com","commits":7}]},"readingTime":{"minutes":6.99,"words":2098},"filePathRelative":"posts/2022/33.md","localizedDate":"2022年12月26日","excerpt":"<h1> JS如何返回异步调用的结果？</h1>\\n<p>这个问题<a href=\\"https://yishulun.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">作者</a>认为是所有从后端转向前端开发的程序员，都会遇到的第一问题。JS前端编程与后端编程最大的不同，就是它的异步机制，同时这也是它的核心机制。</p>\\n<p>为了更好地说明如何返回异步调用的结果，先看三个尝试异步调用的示例吧。</p>\\n<p><strong>示例一：调用一个后端接口，返回接口返回的内容</strong></p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> result\\n  $<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ajax</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">url</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"...\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">success</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">response</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      result <span class=\\"token operator\\">=</span> response\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> result <span class=\\"token comment\\">// 返回：undefined</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"LIYI","license":"CC BY-NC-ND 4.0"},"autoDesc":true}');export{e as data};
