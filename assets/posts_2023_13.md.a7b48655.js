import{_ as s,o as a,c as o,Q as l}from"./chunks/framework.25d5caa7.js";const t="/assets/pexels-photo-270404.a55218f3.jpeg",_=JSON.parse('{"title":"使用 querySelector 查询元素时，如何使用正则进行模糊匹配查询？","description":"","frontmatter":{"date":"2023-10-21T20:07:50.000Z"},"headers":[],"relativePath":"posts/2023/13.md","filePath":"posts/2023/13.md"}'),p={name:"posts/2023/13.md"},e=l('<p><img src="'+t+'" alt=""></p><h1 id="使用-queryselector-查询元素时-如何使用正则进行模糊匹配查询" tabindex="-1">使用 querySelector 查询元素时，如何使用正则进行模糊匹配查询？ <a class="header-anchor" href="#使用-queryselector-查询元素时-如何使用正则进行模糊匹配查询" aria-label="Permalink to &quot;使用 querySelector 查询元素时，如何使用正则进行模糊匹配查询？&quot;">​</a></h1><p>这要用到元素属性值正则匹配选择器，它包括下面 3 种：</p><ul><li>[attr^=&quot;val&quot;] 前匹配</li><li>[attr$=&quot;val&quot;] 后匹配</li><li>[attr*=&quot;val&quot;] 任意匹配</li></ul><p>其中，尖角符号^、美元符号$ 以及星号*都是正则表达式中的特殊标识符，分别表示前匹配、后匹配和任意匹配。</p><p>由于现代网页源码都是编译过后的产物，发到用户浏览器中的源码经常有这样的元素节点：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UserInfoBox_textEllipsis_13jj5&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">f_c</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;8&quot;</span><span style="color:#E1E4E8;">&gt;点击登录&lt;/</span><span style="color:#85E89D;">h2</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">h2</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;UserInfoBox_textEllipsis_13jj5&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">f_c</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;8&quot;</span><span style="color:#24292E;">&gt;点击登录&lt;/</span><span style="color:#22863A;">h2</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>其中，13jj5 并不是固定的，它是一串随机字符，是前端框架在编译时为了避免组件样式混淆而故意添加的。每一次产品重新发布，这个 class 样式便会变化一次。</p><p>如果我们在智能化产品中直接这样查询目标元素：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;h2.UserInfoBox_textEllipsis_13jj5&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;h2.UserInfoBox_textEllipsis_13jj5&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>下次产品重发后，代码便不再有效了。这种情况便适合采用属性值正则匹配选择器：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;h2[class^=&quot;UserInfoBox_textEllipsis&quot;]&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;h2[class^=&quot;UserInfoBox_textEllipsis&quot;]&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>使用属性值正则匹配选择器，关键记忆点有两个：</p><p>1）使用了中括号，直接用在元素选择器后面。在 JS 中，计算属性也是使用中括号，这种写法是一致的、合理的；</p><p>2）在中括号内，使用 k=v 形式书写，并且在 k 后面可以跟^、$、*三个正则符号，分别表示前匹配、后匹配和任意匹配。</p>',15),n=[e];function c(r,i,E,y,d,u){return a(),o("div",null,n)}const q=s(p,[["render",c]]);export{_ as __pageData,q as default};
