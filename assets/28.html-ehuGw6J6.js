import{_ as t,c as s,b as o,o as a}from"./app-DXZDKaf7.js";const c={};function p(r,e){return a(),s("div",null,e[0]||(e[0]=[o("<p>你好，今天聊一下弹窗与产品经理。</p><p>早年企鹅喜欢在 PC 桌面右下角弹窗，弹消息、弹新闻，什么都弹，后来其它厂子也学，一打开电脑，不弹它几分钟，启动步骤完成不了。更有甚者，有的流氓软件还居中弹出。</p><p>15 年以上的老网民对这类弹窗都是深恶痛绝，印象深刻！现在国内这类弹窗基本消声匿迹了，国外的 vscode 却学会这一招了，也不知道是老外学坏了，还是国内工程师把优秀文化带到了国外。</p><p>弹窗必须关掉！关闭方法只需要以下三步：</p><p>1，首先找到 vscode 的安装路径，无论是 windows 还是 mac，在软件上点右键，就可以找到安装位置。</p><p>2，然后依次往里找，找到 resources\\app\\out\\vs\\workbenc 这个目录。</p><p>3，用 vscode 打开目录下的 workbench.desktop.main.css 文件，搜索 monaco-workbench&gt;.notifications-toasts.visible，将 display:flex 设置改成 display:none。保存，重启 vscode 即可。</p><p>我们用 vscode 编辑，关掉 vscode 自身的弹窗。至于原理，很简单，因为 vscode 是基于 electron 开发的，整个工作环境可以看作是一个“大网页”，我们通过改变页面上的样式，由显示改为不显示，控制了弹窗的显示。这里可能有一个问题，就是 vscode 自动更新后，有可能会覆盖我们的修改，弹窗又显示了。如果有这种情况，你再修改一下，要么就关掉 vscode 自动更新。</p><p>突然想到一个问题，什么是产品，为什么要产品经理？</p><p>产品要测试，产品要和用户一起成长。为什么呢？因为用户傻、用户蠢、用户没有见识！你给他高级的，他不认；你给他低级的，他嫌弃；只有给他正好的，他能理解和接受的，他才高兴。产品就是在找一个让大多数目标用户都接受的最大公约数，并和用户一起成长。产品经理就是干这个的。</p><p>神奇吧！</p><p>所以，我回头想，早年真的是企鹅喜欢在 PC 桌面右下角弹窗吗？</p><p>不。是那时候的网民喜欢这样的弹窗，他们刚开始学习使用电脑，不知道怎么摆弄它，一个大窗口盖住了屏幕，就不知道如何切换到另一个窗口了。产品经理说：有消息来了？弹窗吧！千万别把用户当前的窗口挡住，不然用户又要抓狂了。</p><p>网民就像时时越要照顾的世婴，产品经理就像网民大保姆。</p>",14)]))}const i=t(c,[["render",p],["__file","28.html.vue"]]),m=JSON.parse('{"path":"/posts/2023/28.html","title":"vscode 右下角的通知弹窗如何关闭？以及我眼中的产品经理","lang":"zh-CN","frontmatter":{"createTime":"2023-11-08T07:54:39.000Z","title":"vscode 右下角的通知弹窗如何关闭？以及我眼中的产品经理"},"headers":[],"readingTime":{"minutes":2.34,"words":703},"git":{"updatedTime":1740126700000,"contributors":[{"name":"LIYI","username":"LIYI","email":"9830131@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/LIYI?v=4","url":"https://github.com/LIYI"},{"name":"李艺","username":"李艺","email":"9830131@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/李艺?v=4","url":"https://github.com/李艺"}]},"filePathRelative":"posts/2023/28.md","categoryList":[{"id":"18958e","sort":10003,"name":"posts"},{"id":"ac244c","sort":10017,"name":"2023"}]}');export{i as comp,m as data};
