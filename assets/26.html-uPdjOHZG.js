import{_ as r,c as o,a as e,o as s}from"./app-Ds4OgZJi.js";const a="/assets/GyCwiR6aYAAzEvk-hQR3yAhK.png",n={};function u(d,t){return s(),o("div",null,t[0]||(t[0]=[e("p",null,[e("img",{src:a,alt:"图像"})],-1),e("p",null,"AI IDE 能不能干事，能，但感觉是一个新手，需要步步引导。尤其在我想让它实现某种功能的时候，最好把示例代码贴给它——昨天有两次由于代码太多，我把仓库下载到本地，放在了项目的source目录下，然后对它说：Hi，请参考某某目录代码实现某某新功能。就这种手把手的事，它还能做。其他完全的新功能，没有文档、没有示例代码，它完成的怎么样，就看天意了。",-1),e("p",null,"在这一点上，感觉CodeBuddy和Cursor没有本质区别，都是需要引领才能做事的代码新手。不过CodeBuddy是完全免费的，Cursor还要收费，对比之下，CodeBuddy就比较划算了。",-1),e("p",null,"Cursor有一项功能做的比较好！昨天CodeBuddy在执行指令时，老是使用npm，我说了要记得使用pnpm，结果它还是忘记，有时候我必须强制中止，给出指令，然后继续执行。相反Cursor在这一点上给了我足够的自由，它问我有没有需要修改和补充的，没有的话再执行。",-1),e("p",null,"除了执行提示，Cursor在帮我提交代码的时候，写的message也更加动人（如图所示），彻底彰显了大语言模型的总结实力。不过，Cursor这两点做得好的地方我也不觉得先进，我相信CodeBuddy很快就能追上来，腾讯更新软件的速度一直都不慢。",-1),e("p",null,"最后总结一下，如何使用AI IDE呢？应该像在公司给新人安排功能一样，给出清晰的任务，给出建议参考的文档、代码，给出编码喜好或规定——例如使用pnpm不是用npm这些，这些都清楚地给了，才能不被气死。",-1),e("p",null,"2025年8月11日",-1)]))}const m=r(n,[["render",u],["__file","26.html.vue"]]),i=JSON.parse('{"path":"/blog/2025/26.html","title":"这两天使用CodeBuddy和Cursor的对比感受","lang":"zh-CN","frontmatter":{"createTime":"2025/08/11 12:26:11","tags":["编程"],"title":"这两天使用CodeBuddy和Cursor的对比感受"},"headers":[],"readingTime":{"minutes":1.65,"words":494},"git":{"updatedTime":1754886471000,"contributors":[{"name":"李艺","username":"李艺","email":"9830131@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/李艺?v=4","url":"https://github.com/李艺"}]},"filePathRelative":"blog/2025/26.md","categoryList":[{"id":"126ac9","sort":10017,"name":"blog"},{"id":"a264e0","sort":10018,"name":"2025"}]}');export{m as comp,i as data};
