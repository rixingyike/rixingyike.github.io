const e=JSON.parse('{"key":"v-745719a5","path":"/posts/2009/01.html","title":"AS3事件机制概述","lang":"zh-CN","frontmatter":{"sidebar":false,"date":"2008-05-01T00:00:00.000Z","tag":["AS3 Expert"],"description":"AS3事件机制概述 目录 事件机制是AS3的核心功能之一，没有充分掌握事件机制的方方面面，就不能算是精通AS3语言。 1，AS3事件机制的主要成员 IEventDispatcher：事件派发对象接口，定义了添加、派发、移除、是否监听指定事件、是否触发指定事件接口 EventDispatcher：事件派发对象接口的实现者，用户无法撇开EventDispatcher而自行实现IEventDispatcher接口，无法直接继承 EventDispatcher时，必须把EventDispatcher作为实例变量。 Event：事件基类，所有事件类均基于此类实现","head":[["meta",{"property":"og:url","content":"https://yishulun.com/posts/2009/01.html"}],["meta",{"property":"og:site_name","content":"艺述论博客"}],["meta",{"property":"og:title","content":"AS3事件机制概述"}],["meta",{"property":"og:description","content":"AS3事件机制概述 目录 事件机制是AS3的核心功能之一，没有充分掌握事件机制的方方面面，就不能算是精通AS3语言。 1，AS3事件机制的主要成员 IEventDispatcher：事件派发对象接口，定义了添加、派发、移除、是否监听指定事件、是否触发指定事件接口 EventDispatcher：事件派发对象接口的实现者，用户无法撇开EventDispatcher而自行实现IEventDispatcher接口，无法直接继承 EventDispatcher时，必须把EventDispatcher作为实例变量。 Event：事件基类，所有事件类均基于此类实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-06T13:48:40.000Z"}],["meta",{"property":"article:author","content":"LIYI"}],["meta",{"property":"article:tag","content":"AS3 Expert"}],["meta",{"property":"article:published_time","content":"2008-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-06T13:48:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AS3事件机制概述\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2008-05-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-06T13:48:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LIYI\\",\\"url\\":\\"https://yishulun.com/\\"}]}"]]},"headers":[{"level":2,"title":"1，AS3事件机制的主要成员","slug":"_1-as3事件机制的主要成员","link":"#_1-as3事件机制的主要成员","children":[]},{"level":2,"title":"2，观察者模式","slug":"_2-观察者模式","link":"#_2-观察者模式","children":[]},{"level":2,"title":"3，显示列表中事件流的三个阶段","slug":"_3-显示列表中事件流的三个阶段","link":"#_3-显示列表中事件流的三个阶段","children":[]},{"level":2,"title":"4，IEventDispatcher接口讲解","slug":"_4-ieventdispatcher接口讲解","link":"#_4-ieventdispatcher接口讲解","children":[]},{"level":2,"title":"5，Event类实例化讲解","slug":"_5-event类实例化讲解","link":"#_5-event类实例化讲解","children":[]},{"level":2,"title":"6，MouseEvent事件","slug":"_6-mouseevent事件","link":"#_6-mouseevent事件","children":[]},{"level":2,"title":"7，Flash Player内部对事件的强力支持","slug":"_7-flash-player内部对事件的强力支持","link":"#_7-flash-player内部对事件的强力支持","children":[]},{"level":2,"title":"8，事件与代的概念","slug":"_8-事件与代的概念","link":"#_8-事件与代的概念","children":[]},{"level":2,"title":"9，为什么要有事件流三阶段？","slug":"_9-为什么要有事件流三阶段","link":"#_9-为什么要有事件流三阶段","children":[]},{"level":2,"title":"10，优化程序性能的第一准则","slug":"_10-优化程序性能的第一准则","link":"#_10-优化程序性能的第一准则","children":[]},{"level":2,"title":"11，停止冒泡事情的派发","slug":"_11-停止冒泡事情的派发","link":"#_11-停止冒泡事情的派发","children":[]}],"git":{"createdTime":1671674770000,"updatedTime":1691329720000,"contributors":[{"name":"LIYI","email":"9830131@qq.com","commits":5}]},"readingTime":{"minutes":6.8,"words":2041},"filePathRelative":"posts/2009/01.md","localizedDate":"2008年5月1日","excerpt":"<h1> AS3事件机制概述</h1>\\n<p>目录</p>\\n\\n<p>事件机制是AS3的核心功能之一，没有充分掌握事件机制的方方面面，就不能算是精通AS3语言。</p>\\n<h2> 1，AS3事件机制的主要成员</h2>\\n<ul>\\n<li>IEventDispatcher：事件派发对象接口，定义了添加、派发、移除、是否监听指定事件、是否触发指定事件接口</li>\\n<li>EventDispatcher：事件派发对象接口的实现者，用户无法撇开EventDispatcher而自行实现IEventDispatcher接口，无法直接继承</li>\\n<li>EventDispatcher时，必须把EventDispatcher作为实例变量。</li>\\n<li>Event：事件基类，所有事件类均基于此类实现</li>\\n</ul>","copyright":{"author":"LIYI","license":"CC BY-NC-ND 4.0"},"autoDesc":true}');export{e as data};
