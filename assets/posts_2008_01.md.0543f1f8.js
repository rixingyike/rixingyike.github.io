import{_ as s,o as a,c as n,V as l}from"./chunks/framework.b2940161.js";const A=JSON.parse('{"title":"动态语言的基石之函数闭包","description":"","frontmatter":{"sidebar":false,"date":"2008-05-01T00:00:00.000Z","tag":["AS3 Expert"]},"headers":[],"relativePath":"posts/2008/01.md","filePath":"posts/2008/01.md","lastUpdated":1691329720000}'),o={name:"posts/2008/01.md"},p=l(`<h1 id="动态语言的基石之函数闭包" tabindex="-1">动态语言的基石之函数闭包 <a class="header-anchor" href="#动态语言的基石之函数闭包" aria-label="Permalink to &quot;动态语言的基石之函数闭包&quot;">​</a></h1><p>闭包(Closure)是函数(或方法)及其执行环境的组合体，它不仅包括函数(或方法)本身，也包括函数(或方法)运行时的上下文词汇环境。闭包是所有动态语言的基石，闭包实现了函数(或方法)可以作为参数传递给函数(或方法)。</p><h2 id="_1-用一个代码实验例示闭包概念" tabindex="-1">1，用一个代码实验例示闭包概念 <a class="header-anchor" href="#_1-用一个代码实验例示闭包概念" aria-label="Permalink to &quot;1，用一个代码实验例示闭包概念&quot;">​</a></h2><p>在AS3中，共种三种闭包：</p><p>1）函数闭包(Function Closure)</p><p>2）方法闭包(Method Closure)</p><p>3）类闭包(Class Closure)</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">public </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Closure</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Sprite</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Closure</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">super</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">init</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> var </span><span style="color:#F07178;">author</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sban</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> var </span><span style="color:#F07178;">onMouseClick2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">MouseEvent</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		trace(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//author:undefined this:[object global]</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMouseClick1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">MouseEvent</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#82AAFF;">trace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//author:sban this:[object global]</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">MouseEvent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLICK</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMouseClick2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onMouseClick</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">MouseEvent</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#82AAFF;">trace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">author</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//author:sban this:[object Closure]</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在上例代码中，分别以onMouseClick，onMouseClick1，onMouseClick2为listener向stage添加click事件监听，trace结果如代码中注释。其中，onMouseClick是方法闭包，onMouseClick1与onMouseClick2是函数闭包。这里有一个问题，为什么在onMouseClick2中author的输出结果是undefined？</p><h3 id="_2-三类闭包的区分" tabindex="-1">2，三类闭包的区分 <a class="header-anchor" href="#_2-三类闭包的区分" aria-label="Permalink to &quot;2，三类闭包的区分&quot;">​</a></h3><p>在AS3中，任何一个函数(或方法)调用，至少会有一个this参数，这几乎是所有动态语言一惯的规则，不同的是，有的语言对程序员是可见的，如Python，有的则不可见，如AS3。</p><p><strong>1) 方法闭包</strong></p><p>所有类实例的方法，作为参数传递时，均是方法闭包，隐匿的第一个this参数永远是类实例本身，如上例代码中的onMouseClick便是方法闭包，所以它的this输出为[object Closure]。</p><p><strong>2) 函数闭包</strong></p><p>所有匿名方法(包括局部变量方法，类变量方法，见上)，全局方法(包括位于根包下的全局方法，位于子包下的全局方法，见下)均是函数闭包，所有函数闭包的第一个参数如果是null，将被默认替换为Global对象，所以我们看到的输出均是[object global] 。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">flash</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">events</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">MouseEvent</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">function</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMouseClick3</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;"> :</span><span style="color:#A6ACCD;">MouseEvent</span><span style="color:#F07178;">) :</span><span style="color:#A6ACCD;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">trace</span><span style="color:#F07178;">(&quot;</span><span style="color:#A6ACCD;">this</span><span style="color:#F07178;">:&quot; + </span><span style="color:#A6ACCD;">this</span><span style="color:#F07178;">);</span><span style="color:#676E95;font-style:italic;">//this:[object global]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">package</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sban</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">as3Expert</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">import</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">flash</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">events</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">MouseEvent</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">public</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">function</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">onMouseClick4</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;"> :</span><span style="color:#A6ACCD;">MouseEvent</span><span style="color:#F07178;">) {</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">trace</span><span style="color:#F07178;">(&quot;</span><span style="color:#A6ACCD;">this</span><span style="color:#F07178;">:&quot; + </span><span style="color:#A6ACCD;">this</span><span style="color:#F07178;">);</span><span style="color:#676E95;font-style:italic;">//this:[object global]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">}</span></span></code></pre></div><p>对于位于子包下的函数，可以这样直接使用：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(MouseEvent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLICK</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sban</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">as3Expert</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">onMouseClick4)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p><strong>3）类闭包</strong></p><p>这是三类闭包中最简单的一种，也是最容易区分的一种，可能也是价值最低的一种，貌似根本不应该归为闭包类别。在AS3中，所有显式对象类型转换均是类闭包，如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// if obj is Closure which type anotation is Object</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> obj1 </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Closure</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Closure</span><span style="color:#A6ACCD;">(obj)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Closure在这里不是操作符，也不是别的什么东西，在这里应该把它理解为一个特殊的方法。这个方法第一个参数仍然为this，第二个参数是将被作类型转换的对象，在上例代码中为obj。</p><h3 id="_3-改变函数闭包的this参数的一种情况" tabindex="-1">3，改变函数闭包的this参数的一种情况 <a class="header-anchor" href="#_3-改变函数闭包的this参数的一种情况" aria-label="Permalink to &quot;3，改变函数闭包的this参数的一种情况&quot;">​</a></h3><p>在函数闭包中，this参数(null)通常被默默置换为global对象，在某些情况下，程序员可以传递真实的this参数进去，而不是null，从而避免被替换为global对象。</p><p>在Array的forEach, every, map, some, filter这些API中，第一个参数为函数对象，第二个参数为第一个参数的this对象，当程序员指定第二个参数时，便可以在第一个函数内访问this上下文环境的变量，如果不指定，便不能再其内使用this。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">public </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ArrayForEachThis</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">super</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Array</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">( </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">=-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Array</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">trace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">author</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">//,this</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">private </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> author </span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sban</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>编码规范：在使用Array的forEach, every, map, some, filter这些API时，必须在第二个参数位传递this进去。</p><h3 id="_4-为什么在onmouseclick2中author的输出是undefined" tabindex="-1">4，为什么在onMouseClick2中author的输出是undefined？ <a class="header-anchor" href="#_4-为什么在onmouseclick2中author的输出是undefined" aria-label="Permalink to &quot;4，为什么在onMouseClick2中author的输出是undefined？&quot;">​</a></h3><p>所有AS3程序员都应当知道，在AS3运行时，有一个作用域链，该作用域链自global始，在运行时变量首先从最近的链点查找，如果未找到，再向上查找，直到找到或到达global链点。</p><p>onMouseClick2函数的运行时作用域链为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">onMouseClick2闭包-&gt;global</span></span></code></pre></div><p>在这个链条内，根本不存在author变量，所以onMouseClick2的输出为undefined。</p><p>而onMouseClick1的作用域链为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">onMouseClick1-&gt;init-&gt;Closure-&gt;global</span></span></code></pre></div><p>onMouseClick的作用域链为：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">onMouseClick-&gt;Closure-&gt;global</span></span></code></pre></div><p>这两个作用域链均包括author变量，所以onMouseClick1与onMouseClick均不会输出undefined。</p><p>2008年5日</p><blockquote><p>2021更新：AS3与js同属于ECMAScript语言，按理说在闭包概念上也应该是一致的。但从上文来说，AS3的闭包概念更宏大一些，貌似把类、方法、匿名函数都包括进去了。在js中，所谓闭包就是一个函数+不属于这个函数但被这个函数用到的上下文环境变量，两者绑在一起，闭合在一起，可以在程序中像一个独立的包裹一样传来传去。这篇小文是以前写AS3代码写的，关于三个闭包的分类叫法，并非我独创的，我记录当时Adobe文档或社区里也是这么分类的。俱往矣。</p></blockquote>`,39),e=[p];function t(c,r,y,F,D,C){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
