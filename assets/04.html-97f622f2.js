import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as u,b as n,a,w as e,d as s,f as o}from"./app-2d091527.js";const r={},k=n("h1",{id:"chatgpt-发布对插件的支持-告诉-chatgpt-你可以提供什么在线服务-由它作为-前端-向用户提供",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#chatgpt-发布对插件的支持-告诉-chatgpt-你可以提供什么在线服务-由它作为-前端-向用户提供","aria-hidden":"true"},"#"),s(" ChatGPT 发布对插件的支持，告诉 ChatGPT 你可以提供什么在线服务，由它作为“前端”向用户提供")],-1),d=n("p",null,"目录",-1),v={class:"table-of-contents"},m=n("p",null,"2023 年北京时间 3 月 24 凌晨，OpneAI 在推特上官宣：",-1),b=n("figure",null,[n("img",{src:"https://cdn.jsdelivr.net/gh/rixingyike/images@master/2023/202303241145523.png",alt:"image-20230324114533386",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20230324114533386")],-1),h={href:"https://openai.com/blog/chatgpt-plugins",target:"_blank",rel:"noopener noreferrer"},y={href:"https://openai.com/waitlist/plugins",target:"_blank",rel:"noopener noreferrer"},g={href:"https://platform.openai.com/docs/plugins/introduction",target:"_blank",rel:"noopener noreferrer"},q=o('<h2 id="插件可以干什么事" tabindex="-1"><a class="header-anchor" href="#插件可以干什么事" aria-hidden="true">#</a> 插件可以干什么事？</h2><ul><li>检索实时信息，例如体育比分、股票价格、最新消息等；</li><li>检索知识库信息，例如公司文档、个人笔记等；</li><li>代表用户执行操作，例如预订航班、订购食物等。</li></ul><p>总而言之，可以充许你通过 ChatGPT 向你的同事或用户提供你能提供的在线服务。</p><p>举个例子：</p><p>如果用户在线问 ChatGPT：我应该在巴黎的哪里住几晚？</p><p>ChatGPT 模型可以选择调用酒店“预订插件 API”，接收 API 响应，并将 API 返回的数据组合起来，基于其自然语言处理能力，向用户返回人类友好的答案。</p><p>这里提到了 API，那么什么是 API？</p><h2 id="什么是-api" tabindex="-1"><a class="header-anchor" href="#什么是-api" aria-hidden="true">#</a> 什么是 API？</h2><p>API 代表应用程序编程接口，它是一组用于构建和集成应用程序软件的定义和协议。</p><p>你可以把 API 理解为餐馆的服务员，举个例子，假如我们去一家饭馆，桌面上摆着一份菜单，后厨能提供菜单上的菜式。服务员是我们与后厨沟通的桥梁，你告诉服务员你选的菜，然后他再将菜带回到你的餐桌上。在这接口调用中，相当于服务员带着你的 request 去告诉 system，然后将 response 带回给你。</p><p>至此，全世界都可以开放自己系统的 API，然后提供给 ChatGPT 调用，而 ChatGPT 作为“前端”，向用户提供在线服务。</p><p>插件的宣布，宣告着智能革命的开始，从此 ChatGPT 可以访问在线服务和知识内容了。以各大平台仅存的优势就真的只剩下数据了。</p><h2 id="如何申请" tabindex="-1"><a class="header-anchor" href="#如何申请" aria-hidden="true">#</a> 如何申请？</h2>',13),_={href:"https://openai.com/waitlist/plugins",target:"_blank",rel:"noopener noreferrer"},f=o(`<h2 id="如何开发chatgpt-plugins-插件" tabindex="-1"><a class="header-anchor" href="#如何开发chatgpt-plugins-插件" aria-hidden="true">#</a> 如何开发ChatGPT Plugins(插件)？</h2><p>创建 ChatGPT 插件需要三个步骤：</p><ul><li>构建 API 代码，这是插件服务的核心；</li><li>接口文档化，遵照 OpenAPI 规范，以 yaml 或 JSON 格式描述 API，告诉 ChatGPT 你的接口如何调用；</li><li>创建一个 JSON 清单文件，该文件将定义插件的相关元数据，位于/.well-known/ai-plugin.json，它有指定的结构及字段名称，告诉 ChatGPT 你的插件是干什么用的。</li></ul><p>具体步骤，以官方<strong>构建一个简单的待办事项列表插件</strong>为例说明一下：</p><h3 id="第-1-步" tabindex="-1"><a class="header-anchor" href="#第-1-步" aria-hidden="true">#</a> 第 1 步</h3><p>首先，使用以下字段定义一个 manifest.json 文件：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;schema_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name_for_human&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TODO Plugin (no auth)&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name_for_model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;todo&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description_for_human&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description_for_model&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Plugin for managing a TODO list, you can add, remove and view your TODOs.&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;auth&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;openapi&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PLUGIN_HOSTNAME/openapi.yaml&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;is_user_authenticated&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;logo_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PLUGIN_HOSTNAME/logo.png&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;contact_email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dummy@email.com&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;legal_info_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.example.com/legal&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该文件将在/.well-known/ai-plugin.json 这个位置提供。</p><h3 id="第-2-步" tabindex="-1"><a class="header-anchor" href="#第-2-步" aria-hidden="true">#</a> 第 2 步</h3><p>接下来，我们可以定义几个简单的 Python 接口，为特定用户提供创建、删除和获取 todo 列表项的功能。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json

<span class="token keyword">import</span> quart
<span class="token keyword">import</span> quart_cors
<span class="token keyword">from</span> quart <span class="token keyword">import</span> request

app <span class="token operator">=</span> quart_cors<span class="token punctuation">.</span>cors<span class="token punctuation">(</span>quart<span class="token punctuation">.</span>Quart<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token punctuation">,</span> allow_origin<span class="token operator">=</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>

_TODOS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/todos/&lt;string:username&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">add_todo</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    request <span class="token operator">=</span> <span class="token keyword">await</span> quart<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get_json<span class="token punctuation">(</span>force<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> username <span class="token keyword">not</span> <span class="token keyword">in</span> _TODOS<span class="token punctuation">:</span>
        _TODOS<span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    _TODOS<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>request<span class="token punctuation">[</span><span class="token string">&quot;todo&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> quart<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>response<span class="token operator">=</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/todos/&lt;string:username&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_todos</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> quart<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>response<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>_TODOS<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>delete</span><span class="token punctuation">(</span><span class="token string">&quot;/todos/&lt;string:username&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">delete_todo</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>
    request <span class="token operator">=</span> <span class="token keyword">await</span> quart<span class="token punctuation">.</span>request<span class="token punctuation">.</span>get_json<span class="token punctuation">(</span>force<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    todo_idx <span class="token operator">=</span> request<span class="token punctuation">[</span><span class="token string">&quot;todo_idx&quot;</span><span class="token punctuation">]</span>
    <span class="token comment"># fail silently, it&#39;s a simple plugin</span>
    <span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> todo_idx <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>_TODOS<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        _TODOS<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span>todo_idx<span class="token punctuation">)</span>
    <span class="token keyword">return</span> quart<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>response<span class="token operator">=</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span> status<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/logo.png&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">plugin_logo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    filename <span class="token operator">=</span> <span class="token string">&#39;logo.png&#39;</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> quart<span class="token punctuation">.</span>send_file<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">&#39;image/png&#39;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/.well-known/ai-plugin.json&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">plugin_manifest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    host <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;manifest.json&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;PLUGIN_HOSTNAME&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;https://</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> quart<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">&quot;text/json&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/openapi.yaml&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">openapi_spec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    host <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;openapi.yaml&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;PLUGIN_HOSTNAME&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;https://</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> quart<span class="token punctuation">.</span>Response<span class="token punctuation">(</span>text<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">&quot;text/yaml&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5002</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一个在内存中实现简单的增删改查功能的 Py 示例。它同时做为 Web Server 程序还提供了 ChatGPT 需要的 ai-plugin.json 和 openapi.yaml。</p><h3 id="第-3-步" tabindex="-1"><a class="header-anchor" href="#第-3-步" aria-hidden="true">#</a> 第 3 步</h3><p>最后，我们需要设置和定义 OpenAPI 规范，以匹配本地或远程服务器上定义的接口。您不需要通过规范公开 API 的全部功能，而是可以选择性地让 ChatGPT 只访问某些功能。</p><p>有不少工具可以自动将服务器定义代码转换为 OpenAPI 规范，因此您不需要手动执行此操作。对于上面的 Python 代码，它的 OpenAPI 规范说明看起来像这样：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">openapi</span><span class="token punctuation">:</span> 3.0.1
<span class="token key atrule">info</span><span class="token punctuation">:</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> TODO Plugin
  <span class="token key atrule">description</span><span class="token punctuation">:</span> A plugin that allows the user to create and manage a TODO list using ChatGPT. If you do not know the user&#39;s username<span class="token punctuation">,</span> ask them first before making queries to the plugin. Otherwise<span class="token punctuation">,</span> use the username &quot;global&quot;.
  <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;v1&#39;</span>
<span class="token key atrule">servers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> PLUGIN_HOSTNAME
<span class="token key atrule">paths</span><span class="token punctuation">:</span>
  /todos/<span class="token punctuation">{</span>username<span class="token punctuation">}</span><span class="token punctuation">:</span>
    <span class="token key atrule">get</span><span class="token punctuation">:</span>
      <span class="token key atrule">operationId</span><span class="token punctuation">:</span> getTodos
      <span class="token key atrule">summary</span><span class="token punctuation">:</span> Get the list of todos
      <span class="token key atrule">parameters</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">in</span><span class="token punctuation">:</span> path
        <span class="token key atrule">name</span><span class="token punctuation">:</span> username
        <span class="token key atrule">schema</span><span class="token punctuation">:</span>
            <span class="token key atrule">type</span><span class="token punctuation">:</span> string
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">description</span><span class="token punctuation">:</span> The name of the user.
      <span class="token key atrule">responses</span><span class="token punctuation">:</span>
        <span class="token key atrule">&quot;200&quot;</span><span class="token punctuation">:</span>
          <span class="token key atrule">description</span><span class="token punctuation">:</span> OK
          <span class="token key atrule">content</span><span class="token punctuation">:</span>
            <span class="token key atrule">application/json</span><span class="token punctuation">:</span>
              <span class="token key atrule">schema</span><span class="token punctuation">:</span>
                <span class="token key atrule">$ref</span><span class="token punctuation">:</span> <span class="token string">&#39;#/components/schemas/getTodosResponse&#39;</span>
    <span class="token key atrule">post</span><span class="token punctuation">:</span>
      <span class="token key atrule">operationId</span><span class="token punctuation">:</span> addTodo
      <span class="token key atrule">summary</span><span class="token punctuation">:</span> Add a todo to the list
      <span class="token key atrule">parameters</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">in</span><span class="token punctuation">:</span> path
        <span class="token key atrule">name</span><span class="token punctuation">:</span> username
        <span class="token key atrule">schema</span><span class="token punctuation">:</span>
            <span class="token key atrule">type</span><span class="token punctuation">:</span> string
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">description</span><span class="token punctuation">:</span> The name of the user.
      <span class="token key atrule">requestBody</span><span class="token punctuation">:</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">content</span><span class="token punctuation">:</span>
          <span class="token key atrule">application/json</span><span class="token punctuation">:</span>
            <span class="token key atrule">schema</span><span class="token punctuation">:</span>
              <span class="token key atrule">$ref</span><span class="token punctuation">:</span> <span class="token string">&#39;#/components/schemas/addTodoRequest&#39;</span>
      <span class="token key atrule">responses</span><span class="token punctuation">:</span>
        <span class="token key atrule">&quot;200&quot;</span><span class="token punctuation">:</span>
          <span class="token key atrule">description</span><span class="token punctuation">:</span> OK
    <span class="token key atrule">delete</span><span class="token punctuation">:</span>
      <span class="token key atrule">operationId</span><span class="token punctuation">:</span> deleteTodo
      <span class="token key atrule">summary</span><span class="token punctuation">:</span> Delete a todo from the list
      <span class="token key atrule">parameters</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">in</span><span class="token punctuation">:</span> path
        <span class="token key atrule">name</span><span class="token punctuation">:</span> username
        <span class="token key atrule">schema</span><span class="token punctuation">:</span>
            <span class="token key atrule">type</span><span class="token punctuation">:</span> string
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">description</span><span class="token punctuation">:</span> The name of the user.
      <span class="token key atrule">requestBody</span><span class="token punctuation">:</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">content</span><span class="token punctuation">:</span>
          <span class="token key atrule">application/json</span><span class="token punctuation">:</span>
            <span class="token key atrule">schema</span><span class="token punctuation">:</span>
              <span class="token key atrule">$ref</span><span class="token punctuation">:</span> <span class="token string">&#39;#/components/schemas/deleteTodoRequest&#39;</span>
      <span class="token key atrule">responses</span><span class="token punctuation">:</span>
        <span class="token key atrule">&quot;200&quot;</span><span class="token punctuation">:</span>
          <span class="token key atrule">description</span><span class="token punctuation">:</span> OK

<span class="token key atrule">components</span><span class="token punctuation">:</span>
  <span class="token key atrule">schemas</span><span class="token punctuation">:</span>
    <span class="token key atrule">getTodosResponse</span><span class="token punctuation">:</span>
      <span class="token key atrule">type</span><span class="token punctuation">:</span> object
      <span class="token key atrule">properties</span><span class="token punctuation">:</span>
        <span class="token key atrule">todos</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> array
          <span class="token key atrule">items</span><span class="token punctuation">:</span>
            <span class="token key atrule">type</span><span class="token punctuation">:</span> string
          <span class="token key atrule">description</span><span class="token punctuation">:</span> The list of todos.
    <span class="token key atrule">addTodoRequest</span><span class="token punctuation">:</span>
      <span class="token key atrule">type</span><span class="token punctuation">:</span> object
      <span class="token key atrule">required</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> todo
      <span class="token key atrule">properties</span><span class="token punctuation">:</span>
        <span class="token key atrule">todo</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> string
          <span class="token key atrule">description</span><span class="token punctuation">:</span> The todo to add to the list.
          <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">deleteTodoRequest</span><span class="token punctuation">:</span>
      <span class="token key atrule">type</span><span class="token punctuation">:</span> object
      <span class="token key atrule">required</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> todo_idx
      <span class="token key atrule">properties</span><span class="token punctuation">:</span>
        <span class="token key atrule">todo_idx</span><span class="token punctuation">:</span>
          <span class="token key atrule">type</span><span class="token punctuation">:</span> integer
          <span class="token key atrule">description</span><span class="token punctuation">:</span> The index of the todo to delete.
          <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是 openapi.yaml 文件的内容，它将告诉 ChatGPT，如何调用接口。</p><p>这里提代了 OpenAI 规范，可能有读者不了解，那么什么是 OpenAI 规范？</p><h2 id="什么是-openai-规范" tabindex="-1"><a class="header-anchor" href="#什么是-openai-规范" aria-hidden="true">#</a> 什么是 OpenAI 规范？</h2><p>OpenAPI 规范（OAS），是定义一个标准的、与具体编程语言无关的 RESTful API 的规范。</p><p>OpenAPI 规范使得人类和计算机都能在“不接触任何程序源代码和文档、不监控网络通信”的情况下理解一个在线服务的作用。</p><p><strong>遵循该规范的好处是什么？</strong></p><p>如果您遵循 OpenAPI 规范来定义您的 API，那么您就可以用文档生成工具来展示您的 API，用代码生成工具来自动生成其它编程语言的服务器端和客户端代码，用自动测试工具进行测试等等。</p><p>简而言之，通过该规范，我们即可以由接口程序代码生成规范，也可以由规范生成其它后端语言实现的接口程序代码。</p>`,24),w={href:"https://openapi.apifox.cn/",target:"_blank",rel:"noopener noreferrer"},P=n("h2",{id:"如何由-openai-规范文件生成代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何由-openai-规范文件生成代码","aria-hidden":"true"},"#"),s(" 如何由 OpenAI 规范文件生成代码？")],-1),O=n("p",null,"可以使用 openapi-generator-cli。",-1),T={href:"https://github.com/openapitools/openapi-generator-cli",target:"_blank",rel:"noopener noreferrer"},x=o(`<h3 id="第-1-步-安装工具" tabindex="-1"><a class="header-anchor" href="#第-1-步-安装工具" aria-hidden="true">#</a> 第 1 步，安装工具</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install @openapitools/openapi-generator-cli -g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="第-2-步-由规范生成代码" tabindex="-1"><a class="header-anchor" href="#第-2-步-由规范生成代码" aria-hidden="true">#</a> 第 2 步，由规范生成代码</h3><p>下面是一个使用 OpenAPI Generator 生成 Python 服务端代码的示例。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ openapi-generator generate -i /path/to/openapi.yaml -g python-flask -o /output/directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，/path/to/openapi.yaml 是 OpenAPI 规范文件的路径，-g 指定使用的生成器（这里是 python-flask），-o 指定输出目录。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>1946年电子计算机被发明出来的时候，当时没有多少人意识到它将发挥多大作用，我们现在知道的信息革命其实是我们后来总结的。今天开始的智能革命，其实具有同样的特征，如果说ChatGPT的发布还不能让你感到震撼的话，那么今天它发布的ChatGPT Plugins，应该能够引起你足够的重视了。一个联网的智能机器人，无穷的数据+无穷的算力，谁也不知道将产生怎样的结果。<strong>智能革命</strong>已经到来，AI或许不会取代的人，但会使用AI的人，一定会把不会使用AI的人取代。</p><p>你对ChatGPT了解多少，开始试用了吗？如果你是一名程序员，开始研究它的API文档了吗？</p>`,9),I={href:"https://item.jd.com/10070363837259.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://yishulun.com/",target:"_blank",rel:"noopener noreferrer"};function G(j,C){const t=l("router-link"),p=l("ExternalLinkIcon");return c(),u("div",null,[k,d,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#插件可以干什么事"},{default:e(()=>[s("插件可以干什么事？")]),_:1})]),n("li",null,[a(t,{to:"#什么是-api"},{default:e(()=>[s("什么是 API？")]),_:1})]),n("li",null,[a(t,{to:"#如何申请"},{default:e(()=>[s("如何申请？")]),_:1})]),n("li",null,[a(t,{to:"#如何开发chatgpt-plugins-插件"},{default:e(()=>[s("如何开发ChatGPT Plugins(插件)？")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#第-1-步"},{default:e(()=>[s("第 1 步")]),_:1})]),n("li",null,[a(t,{to:"#第-2-步"},{default:e(()=>[s("第 2 步")]),_:1})]),n("li",null,[a(t,{to:"#第-3-步"},{default:e(()=>[s("第 3 步")]),_:1})])])]),n("li",null,[a(t,{to:"#什么是-openai-规范"},{default:e(()=>[s("什么是 OpenAI 规范？")]),_:1})]),n("li",null,[a(t,{to:"#如何由-openai-规范文件生成代码"},{default:e(()=>[s("如何由 OpenAI 规范文件生成代码？")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#第-1-步-安装工具"},{default:e(()=>[s("第 1 步，安装工具")]),_:1})]),n("li",null,[a(t,{to:"#第-2-步-由规范生成代码"},{default:e(()=>[s("第 2 步，由规范生成代码")]),_:1})])])]),n("li",null,[a(t,{to:"#小结"},{default:e(()=>[s("小结")]),_:1})])])]),m,b,n("p",null,[s("指向的链接是："),n("a",h,[s("https://openai.com/blog/chatgpt-plugins"),a(p)])]),n("p",null,[s("你可以立即申请加入等待列表："),n("a",y,[s("https://openai.com/waitlist/plugins"),a(p)])]),n("p",null,[s("或阅读开发插件的文档："),n("a",g,[s("https://platform.openai.com/docs/plugins/introduction"),a(p)])]),q,n("p",null,[s("你可以在这里申请加入等待列表："),n("a",_,[s("https://openai.com/waitlist/plugins"),a(p)])]),f,n("p",null,[s("这里有一个份关于 OpenAI 规范的中文文档，可以考虑："),n("a",w,[s("https://openapi.apifox.cn/"),a(p)])]),P,O,n("p",null,[s("它的工具仓库地址是："),n("a",T,[s("https://github.com/openapitools/openapi-generator-cli"),a(p)])]),x,n("p",null,[s("新人从0到1编程自学经典"),n("a",I,[s("《微信小游戏开发》"),a(p)]),s("全套书籍已经在京东、当当上架，需要签名版及1v1辅导的读者请与作者联系。作者博客："),n("a",A,[s("艺述论"),a(p)]),s("。")])])}const D=i(r,[["render",G],["__file","04.html.vue"]]);export{D as default};
