import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o,c as r,b as e,d as t,a as n,f as l}from"./app-4e8d5300.js";const c="/assets/image-20221222105336458-61dc2544.png",d={},h=e("h1",{id:"解决gibhub-git-push超时、无法提交的问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#解决gibhub-git-push超时、无法提交的问题","aria-hidden":"true"},"#"),t(" 解决Gibhub git push超时、无法提交的问题")],-1),p=e("code",null,"git push",-1),u={href:"https://ping.chinaz.com/github.global.ssl.fastly.net%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},g=e("figure",null,[e("img",{src:c,alt:"image-20221222105336458",tabindex:"0",loading:"lazy"}),e("figcaption",null,"image-20221222105336458")],-1),b=e("p",null,"这个测试仅是一家云商服务器的结果，可能换一家云商，结果就不一样了，数据仅供参考。",-1),_=e("p",null,"那么解决Github仓库不能送拉的问题呢？",-1),m={href:"https://ping.chinaz.com/%EF%BC%89%E4%BE%9D%E6%AC%A1%E6%B5%8B%E8%AF%95%E4%B8%8B%E9%9D%A2%E4%B8%89%E4%B8%AA%E5%9F%9F%E5%90%8D%E7%9A%84%E5%8F%AF%E7%94%A8IP%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},f={href:"http://github.com",target:"_blank",rel:"noopener noreferrer"},v={href:"http://github.global.ssl.fastly.net",target:"_blank",rel:"noopener noreferrer"},E={href:"http://assets-cdn.github.com",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>得用可用IP后，修改hosts文件（例如macOS的<code>/etc/hosts</code>），强制相关域名使用指定IP：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">39.102</span>.194.95 github.com
<span class="token number">151.101</span>.1.194 github.global.ssl.fastly.net
<span class="token number">185.199</span>.108.153 assets-cdn.github.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成修改后，需要重启本机网络，指令重启方法因系统因异：</p><ul><li>macOS系统：<code>sudo ifconfig en0 down &amp;&amp; sudo ifconfig en0 up</code></li><li>Windows系统：<code>ipconfig /flushdns</code></li><li>Linux系统：<code>/etc/init.d/networking restart</code></li></ul><p>如果不使用指令，用鼠标点击Wifi或本地网络，手动关闭、重连也可以达到同样的效果。重启后，git指令基本就可以工作了。</p><p>但是问题到这里还没有结束。</p><h2 id="指令执行时都访问了哪些域名" tabindex="-1"><a class="header-anchor" href="#指令执行时都访问了哪些域名" aria-hidden="true">#</a> 指令执行时都访问了哪些域名？</h2><p><code>git push</code>指令执行时，都在背后访问了哪些域名？我们怎么知道一个指令的成功执行，到底需要能够访问哪些域名地址呢？</p><p>这与具体指令要做的事情有关，在进行git操作时，github.com域名是必连的，github.global.ssl.fastly.net域名是为了处理ssl安全连接的，而assets-cdn.github.com域名是cdn加速域名，在github提交中暂时用不到。</p><p>除了分析指令本身的功能或源码之外，还可以在本地使用网络监测工具。例如netstat指令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ netstat -a | grep &quot;github&quot;
tcp4       0      0  192.168.31.224.50744   github.com.ssh         SYN_SENT   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="有没有防墙提交工具" tabindex="-1"><a class="header-anchor" href="#有没有防墙提交工具" aria-hidden="true">#</a> 有没有防墙提交工具？</h2><p>有没有一个自动防墙提交的工具呢？这个工具最好可以封装成一个指令，例如github_safe_push。github自有的CLI工具指令gh并不能担负这个职责。</p><p>在网络上搜索了一下，暂时没有找到具有这样功能的工具。从理念上讲，这样的工具应该是可以实现的，使用Python代码先查询可用域名，继而进行网络设置，最后调用原生的git push指令提交代码。</p><h2 id="使用国内csdn的缓存服务" tabindex="-1"><a class="header-anchor" href="#使用国内csdn的缓存服务" aria-hidden="true">#</a> 使用国内CSDN的缓存服务</h2><p>2022-12-24更新：</p><p>CSDN为国内程序员提供了一项Github缓存、加速服务</p><blockquote><p>GitHub 缓存服务是 CSDN 为开发者提供的一项代码仓库加速服务。</p></blockquote>`,18),x={href:"https://gitcode.net/gitcode/help-docs/-/wikis/docs/user/project/repo/repo-mirror",target:"_blank",rel:"noopener noreferrer"};function B(A,y){const s=a("ExternalLinkIcon");return o(),r("div",null,[h,e("p",null,[t("最近"),p,t("指令又不能工作了，马上测了一下IP，发现github.global.ssl.fastly.net这个域名，除了台湾宝岛那里，基本都不能访问。（注：测试地址"),e("a",u,[t("https://ping.chinaz.com/github.global.ssl.fastly.net）"),n(s)])]),g,b,_,e("p",null,[t("使用这个网址工具（"),e("a",m,[t("https://ping.chinaz.com/）依次测试下面三个域名的可用IP："),n(s)])]),e("ul",null,[e("li",null,[e("a",f,[t("github.com"),n(s)])]),e("li",null,[e("a",v,[t("github.global.ssl.fastly.net"),n(s)])]),e("li",null,[e("a",E,[t("assets-cdn.github.com"),n(s)])])]),k,e("p",null,[t("如果感兴趣，可以从这里了解："),e("a",x,[t("https://gitcode.net/gitcode/help-docs/-/wikis/docs/user/project/repo/repo-mirror"),n(s)])])])}const F=i(d,[["render",B],["__file","30.html.vue"]]);export{F as default};
