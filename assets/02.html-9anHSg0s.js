import{_ as a,c as e,b as p,o as i}from"./app-BKBtgOoW.js";const n="/assets/image-20230411070305528-Com_x47m.png",t="/assets/image-20230520193735778-DjIxUZK4.png",c="/assets/image-20240110103310614-DHX7iNJl.png",l="/assets/image-20230611150634840-BTVFm75H.png",d="/assets/image-20240110104010105-CaljjKWT.png",h="/assets/image-20231223211956865-DvJlQTr-.png",o="/assets/image-20231223212137478-jjA8R4T2.png",r="/assets/image-20240111234002702-CBSXgL9D.png",m="/assets/image-20240111234318674-KeE0v3nM.png",g="/assets/image-20240121130022050-Jhjklhlu.png",u="/assets/image-20240121130309985-BFT35x9Z.png",b="/assets/image-20240121134030456-Rvcliq50.png",k="/assets/image-20240220194411562-D2pFTi5K.png",y="/assets/image-20240220194542465-Ct0uYnDz.png",f={};function v(_,s){return i(),e("div",null,s[0]||(s[0]=[p('<p>由于水平有限，时间仓促，书中难免有遗漏、错愕之处，恳求读者朋友斧正。如有发现，可以给我发邮件9830131@qq.com，或加我的微信（9830131）告诉我。</p><p>下面是2023年2月&amp;3月版本1已经发现的勘误列表。</p><h2 id="前端篇" tabindex="-1"><a class="header-anchor" href="#前端篇"><span>前端篇</span></a></h2><h3 id="p17" tabindex="-1"><a class="header-anchor" href="#p17"><span>P17</span></a></h3><p><img src="https://cdn.jsdelivr.net/gh/rixingyike/images@master/202320230711225054-2023-07-11-22-50-56.png" alt="20230711225054-2023-07-11-22-50-56"></p><p>有读者找不到对应内容，在箭头处、句号前面可以添加一句：第16课拓展部分。</p><h3 id="p55" tabindex="-1"><a class="header-anchor" href="#p55"><span>P55</span></a></h3><p>如下所示，<code>0+&quot;10&quot;</code>结果是<code>&quot;010&quot;</code>，并不是数值10；如果想将数字字符串转化为数字，直接在前面加符号“+”，不需要数字 0。截图红框内应改为：</p><blockquote><p>使用加号与一个数字拼接：+ &quot;10&quot;，这种方式最简单直接，其实本质上也是隐式转换。</p></blockquote><p><img src="'+n+'" alt="image-20230411070305528" width="1023" height="416"></p><p>该处由@<strong>MuninnC</strong>指出，感谢勘误。</p><h3 id="p156-增补" tabindex="-1"><a class="header-anchor" href="#p156-增补"><span>P156(增补)</span></a></h3><img src="'+t+`" alt="image-20230520193735778" style="zoom:67%;" width="902" height="567"><p>在箭头所示的地方（..进行改写。）、句号后面，添加这样一句话：</p><blockquote><p>注意这里的3处事件，指代码清单4-2中的click、mousemove、click三个事件，分别将以touchEnd、touchMove和touchEnd事件改写。</p></blockquote><h3 id="p262" tabindex="-1"><a class="header-anchor" href="#p262"><span>P262</span></a></h3><p>第一处，第4行、第5行，两行注释应改为：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>4.let</span><span class="space"> </span><span>d</span><span class="space"> </span><span>=</span><span class="space"> </span><span>{num:</span><span class="space"> </span><span>100}</span><span class="space"> </span><span>//</span><span class="space"> </span><span>变量d存在于栈中，{mum:</span><span class="space"> </span><span>100}作为对象存在于堆内存中</span></span>
<span class="line"><span>5.let</span><span class="space"> </span><span>e</span><span class="space"> </span><span>=</span><span class="space"> </span><span>[100,</span><span class="space"> </span><span>200]</span><span class="space"> </span><span>//</span><span class="space"> </span><span>变量e存在于栈中，[100,</span><span class="space"> </span><span>200]作为对象存在于堆内存中</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二处，划线部分应改为：</p><p>其中c、b、a位于栈内存，我们是直接操作的；而e、d保存的是引用地址......</p><p><img src="`+c+'" alt="image-20240110103310614" width="1462" height="1234"></p><h3 id="p281" tabindex="-1"><a class="header-anchor" href="#p281"><span>P281</span></a></h3><p><img src="'+l+'" alt="image-20230611150634840" width="2252" height="1552"></p><p>因为有读者对这里理解有疑问，在“第7行...”这一句的后面，需要加一段解释内容。内容如下：</p><p>第9行，为什么让#pos指向defaultPos也没用？因为第一次执行reset时，会把引用对象defaultPos赋值给#pos，之后小球在运动过程中更新的都是#pos。也就是说，默认值对象defaultPos被“污染”了，从第二次调用reset开始，它不能再作为默认值对象被使用了，因为它里面的x、y值不是默认值了。</p><h3 id="p480" tabindex="-1"><a class="header-anchor" href="#p480"><span>P480</span></a></h3><p>红色划线部分应改为：...渲染上下文对象属于哪个画布，就对哪个画布生效。</p><p><img src="'+d+'" alt="image-20240110104010105" width="1402" height="382"></p><h2 id="后端篇" tabindex="-1"><a class="header-anchor" href="#后端篇"><span>后端篇</span></a></h2><h3 id="p22-3课1小节-使用wx-getfuzzylocation代替" tabindex="-1"><a class="header-anchor" href="#p22-3课1小节-使用wx-getfuzzylocation代替"><span>P22，3课1小节 使用wx.getFuzzyLocation代替</span></a></h3><p>也在3.1小节，与上面的问题是相关的。由于微信官方对地理位置权限的加强管理，这里有较多变化，具体见：<a href="https://yishulun.com/posts/2023/52.html" target="_blank" rel="noopener noreferrer">如何在微信小游戏/小游戏中获取地理位置信息？</a></p><p>这里有代码清单1-12、1-14、1-15都涉及修改。</p><h3 id="p27-关于lbs域名白名单的设置" tabindex="-1"><a class="header-anchor" href="#p27-关于lbs域名白名单的设置"><span>P27，关于LBS域名白名单的设置</span></a></h3><p>在书上27页，如下图1-10这个位置：</p><p><img src="'+h+'" alt="image-20231223211956865" width="1804" height="1632"></p><p>书上提到的一个位于这里（https://lbs.qq.com/service/webService/webServiceGuide/webServiceGcoder）的在线测试工具，现在有了修改，不再可以直接填写key，所以原书上的测试方法需要修改一下。</p><p>目前在测试开发阶段最简便的设置白名单的方式，是将白名单列表留空：</p><p><img src="'+o+'" alt="image-20231223212137478" width="1198" height="1360"></p><p>留空代表不限制调用来源。</p><p>留空以后，可以使用下面两个方法测试API Key的可用性：</p><ul><li><p>1，直接在浏览器中访问：https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1</p></li><li><p>2，在终端中访问：curl &quot;https://apis.map.qq.com/ws/geocoder/v1?location=28.7033487,115.8660847&amp;key=L5YBZ-BTZHX-FPU42-Z3PUL-VHHG2-AFF4Q&amp;get_poi=1&quot;</p></li></ul><p>注意将key替换成自己的key。</p><p>如果不这样设置，或按原方法设置，可能会遇到这样的一个错误：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&quot;message&quot;:</span><span class="space"> </span><span>&quot;请求来源未被授权，解决方法见：https://lbs.qq.com/faq/serverFaq/webServiceKey。此次请求无来源信息&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个错误可能出现在Web请求或curl请求中，没有来源信息也属于来源未被授权的情况之一。</p><p>由于腾讯LBS官方SDK及文档在以后可能存在变化，在设置白名单时，最好当时查看在开发者工具网络面板中出现的域名，并将其设置在腾讯LBS管理后台的白名单中。被设置的域名可能继续是servicewechat.com，也可能是其它域名。</p><h3 id="p32、p33-4课1小节-在线资源地址替换" tabindex="-1"><a class="header-anchor" href="#p32、p33-4课1小节-在线资源地址替换"><span>P32、P33，4课1小节 在线资源地址替换</span></a></h3><p>由于原在线存储桶可能存在到期，禁止访问等问题，对于下面的在线资源地址：</p><blockquote><p>https://cloud-1252822131.cos.ap-beijing.myqcloud.com/images/bg.png https://cloud-1252822131.cos.ap-beijing.myqcloud.com/fonts/webfont.ttf</p></blockquote><p>可以将前面的cloud-1252822131.cos.ap-beijing.myqcloud.com替换为yishulun.com/wegame_ap，例如第一个地址替换后是：</p><blockquote><p>https://yishulun.com/wegame_ap/images/bg.png</p></blockquote><p>如果原地址可用当用，不可用时，可换用替换后的地址。</p><h3 id="p44-2-1文件路径标注" tabindex="-1"><a class="header-anchor" href="#p44-2-1文件路径标注"><span>P44 2.1文件路径标注</span></a></h3><p>在第 2 章第 4 课中，代码清单中的路径“JS:第2章\\4.1\\game.js”都应该是“JS:第2章\\2.1\\game.js”</p><p><img src="'+r+`" alt="image-20240111234002702" width="1232" height="172"></p><h3 id="p57-修改gametoplayer-init" tabindex="-1"><a class="header-anchor" href="#p57-修改gametoplayer-init"><span>P57 修改gameTopLayer.init</span></a></h3><p>在代码清单 2-14 中，应该添加对gameTopLayer.init方法调用的改动：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">gameTopLayer.init()</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">gameTopLayer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">game</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前面P53 页只走到了gameTopLayer.init()，这一节应该是有添加gameTopLayer.init({ game: this })这一发动的，但是 在P57 页的代码清单2-17 中没有体现。</p><h3 id="p59-2-2文件路径标注" tabindex="-1"><a class="header-anchor" href="#p59-2-2文件路径标注"><span>P59 2.2文件路径标注</span></a></h3><p>同上一条，第2章第5课中，代码清单中的路径“JS:第2章\\4.2\\game.js”都应该是“JS:第2章\\2.2\\game.js”</p><p><img src="`+m+'" alt="image-20240111234318674" width="1162" height="170"></p><h3 id="p72-排行榜设置位置" tabindex="-1"><a class="header-anchor" href="#p72-排行榜设置位置"><span>P72（排行榜设置位置）</span></a></h3><p>原游戏礼包配置、游戏圈功能、活动运营配置、基础运营素材和排行榜设置已迁移到“游戏运营工具箱”，目前在：功能→游戏运营工具箱→排行榜设置。</p><p>图示划线部分应修改为：功能→游戏运营工具箱→排行榜设置。</p><p><img src="'+g+'" alt="image-20240121130022050" width="1432" height="558"></p><p>位置：</p><p><img src="'+u+'" alt="image-20240121130309985" width="3142" height="902"></p><p>京东购买链接：<a href="https://item.jd.com/10070363837259.html" target="_blank" rel="noopener noreferrer">https://item.jd.com/10070363837259.html</a></p><h3 id="p75-needupdate修改默认值" tabindex="-1"><a class="header-anchor" href="#p75-needupdate修改默认值"><span>P75（needUpdate修改默认值）</span></a></h3><p>如果排行榜没有完成配置，可能会引发一个画布的渲染效果，这是由排行榜拉取不到数据引起的，在排行榜正确设置以后，可以恢复。</p><p>另外，为了增加代码的鲁棒性，可以修改 open_data/index.js 文件中的下列划线代码：</p><p><img src="'+b+'" alt="image-20240121134030456" width="1396" height="1454"></p><p>原来此函数中，needUpdate默认为 true，现修改为 false，并且只在新分数（newRankValue.wxgame.score）大于旧分数（rankValue.wxgame.score）时，才变成true。</p><p>修改后，即使排行榜没有准备好，代码也能避免报错。</p><h3 id="p149-处理-npm-i-安装类库的证书错误" tabindex="-1"><a class="header-anchor" href="#p149-处理-npm-i-安装类库的证书错误"><span>P149 处理 npm i 安装类库的证书错误</span></a></h3><p><img src="'+k+`" alt="image-20240220194411562" width="1344" height="1450"></p><p>在 P149 页时，执行 npm i 或 npm run dev 时，可能会遇到这样的错误：</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ERR!</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">code</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CERT_HAS_EXPIRED</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ERR!</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">errno</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CERT_HAS_EXPIRED</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ERR!</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">request</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">to</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://registry.npm.taobao.org/ylru/download/ylru-1.2.1.tgz</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">failed,</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">reason:</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">certificate</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">has</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">expired</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误缘于社区类库更新规则的更改，及淘宝仓库网站证书的过期。</p><p><img src="`+y+'" alt="image-20240220194542465" width="742" height="72"></p><p>npm不再支持自签名证书，而淘宝仓库网站恰好又使用了自定义证书。当我们使用 npm i 安装某些类库时，例如类库地址为 https://registry.npm.taobao.org/ylru/download/ylru-1.2.1.tgz，此时npm无法验证来源，抛出了 CERT_HAS_EXPIRED 错误。</p><p>解决办法：</p><p>关闭 SSL 验证</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm</span><span class="space"> </span><span>config</span><span class="space"> </span><span>set</span><span class="space"> </span><span>strict-ssl</span><span class="space"> </span><span>false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改软件源，例如将软件源地址改回官网：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm</span><span class="space"> </span><span>config</span><span class="space"> </span><span>set</span><span class="space"> </span><span>registry</span><span class="space"> </span><span>https://registry.npmjs.org/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个更改的副作用是，更新或安装类库时需要梯子，如果有梯子则无妨。</p>',88)]))}const x=a(f,[["render",v],["__file","02.html.vue"]]),A=JSON.parse('{"path":"/posts/2023/02.html","title":"《微信小游戏开发》勘误","lang":"zh-CN","frontmatter":{"createTime":"2023-03-08T23:33:47.000Z","bookToc":false,"star":true,"title":"《微信小游戏开发》勘误","description":"由于水平有限，时间仓促，书中难免有遗漏、错愕之处，恳求读者朋友斧正。如有发现，可以给我发邮件9830131@qq.com，或加我的微信（9830131）告诉我。 下面是2023年2月&3月版本1已经发现的勘误列表。 前端篇 P17 20230711225054-2023-07-11-22-50-56 有读者找不到对应内容，在箭头处、句号前面可以添加一句...","head":[["meta",{"property":"og:url","content":"https://yishulu.com/posts/2023/02.html"}],["meta",{"property":"og:site_name","content":"艺述论"}],["meta",{"property":"og:title","content":"《微信小游戏开发》勘误"}],["meta",{"property":"og:description","content":"由于水平有限，时间仓促，书中难免有遗漏、错愕之处，恳求读者朋友斧正。如有发现，可以给我发邮件9830131@qq.com，或加我的微信（9830131）告诉我。 下面是2023年2月&3月版本1已经发现的勘误列表。 前端篇 P17 20230711225054-2023-07-11-22-50-56 有读者找不到对应内容，在箭头处、句号前面可以添加一句..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/rixingyike/images@master/202320230711225054-2023-07-11-22-50-56.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-21T08:31:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-21T08:31:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《微信小游戏开发》勘误\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/rixingyike/images@master/202320230711225054-2023-07-11-22-50-56.png\\"],\\"dateModified\\":\\"2025-02-21T08:31:40.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":6.16,"words":1847},"git":{"updatedTime":1740126700000,"changelog":[{"hash":"c178bdf56fc2561b8edb869f99e09ad4eea026b8","date":1740126700000,"email":"9830131@qq.com","author":"李艺","message":"2025-02-21: Automatic commit","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/c178bdf56fc2561b8edb869f99e09ad4eea026b8"},{"hash":"a8648d3f60a085e95ef100f6b0dcbbfc5694a781","date":1739842293000,"email":"9830131@qq.com","author":"LIYI","message":"2025-02-18: Automatic commit","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/a8648d3f60a085e95ef100f6b0dcbbfc5694a781"},{"hash":"572933bbf32c4add29a8bd8f347082e67314f0e5","date":1708431124000,"email":"9830131@qq.com","author":"LIYI","message":"2024-02-20_20:12","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/572933bbf32c4add29a8bd8f347082e67314f0e5"},{"hash":"b292dcf01306e896a982c7d947823e8fc7214beb","date":1708429720000,"email":"9830131@qq.com","author":"LIYI","message":"2024-02-20_19:48","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/b292dcf01306e896a982c7d947823e8fc7214beb"},{"hash":"bf4e464168ee5a78cb229c2e7ca58ae0d1d17764","date":1705815746000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-21_13:42","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/bf4e464168ee5a78cb229c2e7ca58ae0d1d17764"},{"hash":"015a30f0ed2978832b2cf17bc2451b8462eefe22","date":1705813399000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-21_13:03","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/015a30f0ed2978832b2cf17bc2451b8462eefe22"},{"hash":"7457cf2d8cbb95132b64db9e2530b4e2f0ebdb22","date":1705813343000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-21_13:02","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/7457cf2d8cbb95132b64db9e2530b4e2f0ebdb22"},{"hash":"4a6b06233a744132a90c6f7d11bd352148e9629f","date":1704988179000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-11_23:49","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/4a6b06233a744132a90c6f7d11bd352148e9629f"},{"hash":"580d20109c6e9464e2cf021e859f6ef06c706e31","date":1704975182000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-11_20:13","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/580d20109c6e9464e2cf021e859f6ef06c706e31"},{"hash":"cbe389384e410a6cfdd81da87a5b69b42f96f76d","date":1704854954000,"email":"9830131@qq.com","author":"LIYI","message":"2024-01-10_10:49","commitUrl":"https://github.com/rixingyike/yishulun_blog_mdandcode/commit/cbe389384e410a6cfdd81da87a5b69b42f96f76d"}]},"autoDesc":true,"filePathRelative":"posts/2023/02.md","categoryList":[{"id":"18958e","sort":10001,"name":"posts"},{"id":"ac244c","sort":10002,"name":"2023"}]}');export{x as comp,A as data};
